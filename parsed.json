[
    {
        "struct": "public struct SceneRestorationBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SceneRestorationBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CarouselTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, introduced: 7.0, deprecated: 100000.0, renamed: \"VerticalTabViewStyle\")",
            "@available(visionOS, unavailable)"
        ],
        "name": "CarouselTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MenuButton<Label, Content> : SwiftUICore.View where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `Menu` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "MenuButton",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct HandGestureShortcut : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, *)",
            "@available(visionOS, unavailable)"
        ],
        "name": "HandGestureShortcut",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Settings<Content> : SwiftUI.Scene where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "Settings",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct WindowResizability : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 13.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowResizability",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ListValue<Style, SelectionValue> where Style : SwiftUI.ListStyle, SelectionValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ListValue",
        "generics": [
            "Style",
            "SelectionValue"
        ],
        "conformances": [],
        "conditions": {
            "Style": "ListStyle",
            "SelectionValue": "Hashable"
        },
        "condition_relations": {
            "Style": ":",
            "SelectionValue": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EmptyControlWidgetConfiguration : SwiftUI.ControlWidgetConfiguration {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "EmptyControlWidgetConfiguration",
        "conformances": [
            "ControlWidgetConfiguration "
        ]
    },
    {
        "struct": "public struct WindowLevel : Swift.Sendable, Swift.Hashable {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowLevel",
        "conformances": [
            "Sendable",
            "Hashable "
        ]
    },
    {
        "struct": "public struct AccessibilityActionCategory : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "AccessibilityActionCategory",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ActionSheet {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"use `View.confirmationDialog(title:isPresented:titleVisibility:presenting::actions:)`instead.\")",
            "@available(macOS, unavailable)",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"use `View.confirmationDialog(title:isPresented:titleVisibility:presenting:actions:)`instead.\")",
            "@available(watchOS, introduced: 6.0, deprecated: 100000.0, message: \"use `View.confirmationDialog(title:isPresented:titleVisibility:presenting:actions:)`instead.\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"use `View.confirmationDialog(title:isPresented:titleVisibility:presenting:actions:)`instead.\")"
        ],
        "name": "ActionSheet",
        "conformances": []
    },
    {
        "struct": "public struct SensoryFeedback : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)",
            "@available(visionOS, unavailable)"
        ],
        "name": "SensoryFeedback",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ColumnNavigationViewStyle : SwiftUI.NavigationViewStyle {",
        "availabilities": [
            "@available(iOS, introduced: 15.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationSplitView\")",
            "@available(macOS, introduced: 12.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationSplitView\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationSplitView\")"
        ],
        "name": "ColumnNavigationViewStyle",
        "conformances": [
            "NavigationViewStyle "
        ]
    },
    {
        "struct": "public struct _SceneInputs {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_SceneInputs",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "DefaultButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct WheelPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 13.0, watchOS 6.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "WheelPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct Alert {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"Use View.alert(_:isPresented:presenting:actions:) instead.\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use View.alert(_:isPresented:presenting:actions:) instead.\")",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"Use View.alert(_:isPresented:presenting:actions:) instead.\")",
            "@available(watchOS, introduced: 6.0, deprecated: 100000.0, message: \"Use View.alert(_:isPresented:presenting:actions:) instead.\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"Use View.alert(_:isPresented:presenting:actions:) instead.\")"
        ],
        "name": "Alert",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ButtonToggleStyle : SwiftUI.ToggleStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "ButtonToggleStyle",
        "conformances": [
            "ToggleStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Table<Value, Rows, Columns> : SwiftUICore.View where Value == Rows.TableRowValue, Rows : SwiftUI.TableRowContent, Columns : SwiftUI.TableColumnContent, Rows.TableRowValue == Columns.TableRowValue {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "Table",
        "generics": [
            "Value",
            "Rows",
            "Columns"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Rows": "TableRowContent",
            "Columns": "TableColumnContent"
        },
        "condition_relations": {
            "Rows": ":",
            "Columns": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableOutlineGroupContent<Data> : SwiftUI.TableRowContent where Data : Swift.RandomAccessCollection, Data.Element : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableOutlineGroupContent",
        "generics": [
            "Data"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Data": "RandomAccessCollection",
            "Data.Element": "Identifiable"
        },
        "condition_relations": {
            "Data": ":",
            "Data.Element": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableForEachContent<Data> : SwiftUI.TableRowContent where Data : Swift.RandomAccessCollection, Data.Element : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableForEachContent",
        "generics": [
            "Data"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Data": "RandomAccessCollection",
            "Data.Element": "Identifiable"
        },
        "condition_relations": {
            "Data": ":",
            "Data.Element": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultDateProgressLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "DefaultDateProgressLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultLabelStyle : SwiftUI.LabelStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "DefaultLabelStyle",
        "conformances": [
            "LabelStyle "
        ]
    },
    {
        "struct": "public struct AlternatingRowBackgroundBehavior : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "AlternatingRowBackgroundBehavior",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ScrollTargetBehaviorEnvironmentContext {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ScrollTargetBehaviorEnvironmentContext",
        "conformances": []
    },
    {
        "struct": "@dynamicMemberLookup public struct ScrollTargetBehaviorContext {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ScrollTargetBehaviorContext",
        "conformances": []
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct DismissAction {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "DismissAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderlessButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 17.0, watchOS 8.0, *)"
        ],
        "name": "BorderlessButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct _WidgetInputs {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "_WidgetInputs",
        "conformances": []
    },
    {
        "struct": "public struct WritingToolsBehavior : Swift.Sendable, Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WritingToolsBehavior",
        "conformances": [
            "Sendable",
            "Hashable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ScrollableLayoutView<Data, Layout> : SwiftUICore.View where Data : Swift.RandomAccessCollection, Layout : SwiftUI._ScrollableLayout, Data.Element : SwiftUICore.View, Data.Index : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollableLayoutView",
        "generics": [
            "Data",
            "Layout"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Data": "RandomAccessCollection",
            "Layout": "_ScrollableLayout",
            "Data.Element": "View",
            "Data.Index": "Hashable"
        },
        "condition_relations": {
            "Data": ":",
            "Layout": ":",
            "Data.Element": ":",
            "Data.Index": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MenuBarExtra<Label, Content> : SwiftUI.Scene where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "MenuBarExtra",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BalancedNavigationSplitViewStyle : SwiftUI.NavigationSplitViewStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "BalancedNavigationSplitViewStyle",
        "conformances": [
            "NavigationSplitViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ColumnsFormStyle : SwiftUI.FormStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ColumnsFormStyle",
        "conformances": [
            "FormStyle "
        ]
    },
    {
        "struct": "public struct DefaultTextFieldStyle : SwiftUI.TextFieldStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "DefaultTextFieldStyle",
        "conformances": [
            "TextFieldStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct WindowGroup<Content> : SwiftUI.Scene where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "WindowGroup",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct FillShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "FillShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct DropInfo {",
        "availabilities": [
            "@available(iOS 13.4, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DropInfo",
        "conformances": []
    },
    {
        "struct": "public struct DropProposal : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.4, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DropProposal",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct SequenceGesture<First, Second> : SwiftUICore.Gesture where First : SwiftUICore.Gesture, Second : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "SequenceGesture",
        "generics": [
            "First",
            "Second"
        ],
        "conformances": [
            "Gesture "
        ],
        "conditions": {
            "First": "Gesture",
            "Second": "Gesture"
        },
        "condition_relations": {
            "First": ":",
            "Second": ":"
        }
    },
    {
        "struct": "public struct DefaultListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "DefaultListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct DismissBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DismissBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PreviewModifierContent : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "PreviewModifierContent",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct _CommandsInputs {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_CommandsInputs",
        "conformances": []
    },
    {
        "struct": "public struct _CommandsOutputs {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_CommandsOutputs",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct WindowVisibilityToggle<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowVisibilityToggle",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultWindowVisibilityToggleLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DefaultWindowVisibilityToggleLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AlignmentWritingModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AlignmentWritingModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct SearchScopeActivation {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "SearchScopeActivation",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TabView<SelectionValue, Content> : SwiftUICore.View where SelectionValue : Swift.Hashable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 7.0, *)"
        ],
        "name": "TabView",
        "generics": [
            "SelectionValue",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "SelectionValue": "Hashable",
            "Content": "View"
        },
        "condition_relations": {
            "SelectionValue": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _SymbolEffectsRemovedModifier : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_SymbolEffectsRemovedModifier",
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "public struct TextInputDictationBehavior : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, visionOS 1.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "TextInputDictationBehavior",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct TextInputDictationActivation : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, visionOS 1.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "TextInputDictationActivation",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LazyVStack<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LazyVStack",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticDisclosureGroupStyle : SwiftUI.DisclosureGroupStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AutomaticDisclosureGroupStyle",
        "conformances": [
            "DisclosureGroupStyle "
        ]
    },
    {
        "struct": "public struct TouchBar<Content> where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "TouchBar",
        "generics": [
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _TouchBarModifier<Content> : SwiftUICore.ViewModifier where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_TouchBarModifier",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct SidebarListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SidebarListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct SubscriptionView<PublisherType, Content> : SwiftUICore.View where PublisherType : Combine.Publisher, Content : SwiftUICore.View, PublisherType.Failure == Swift.Never {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "SubscriptionView",
        "generics": [
            "PublisherType",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "PublisherType": "Publisher",
            "Content": "View"
        },
        "condition_relations": {
            "PublisherType": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct MenuStyleConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "MenuStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct OpenWindowAction {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "OpenWindowAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ToolbarItemGroup<Content> : SwiftUI.ToolbarContent where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ToolbarItemGroup",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ToolbarContent "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LabeledToolbarItemGroupContent<Content, Label> : SwiftUICore.View where Content : SwiftUICore.View, Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LabeledToolbarItemGroupContent",
        "generics": [
            "Content",
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View",
            "Label": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Label": ":"
        }
    },
    {
        "struct": "public struct WorldAlignmentBehavior : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WorldAlignmentBehavior",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _FlipForRTLEffect : SwiftUICore.ViewModifier, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_FlipForRTLEffect",
        "conformances": [
            "ViewModifier",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor public struct OpenDocumentAction {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "OpenDocumentAction",
        "conformances": []
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct NewDocumentAction {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "NewDocumentAction",
        "conformances": []
    },
    {
        "struct": "public struct TitleBarWindowStyle : SwiftUI.WindowStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "TitleBarWindowStyle",
        "conformances": [
            "WindowStyle "
        ]
    },
    {
        "struct": "public struct TextEditorStyleConfiguration {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TextEditorStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TextEditor : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TextEditor",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct ToggleStyleConfiguration {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ToggleStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ScrollViewRoot<P> : SwiftUICore.View where P : SwiftUI._ScrollableContentProvider {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollViewRoot",
        "generics": [
            "P"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "P": "_ScrollableContentProvider"
        },
        "condition_relations": {
            "P": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderedButtonMenuStyle : SwiftUI.MenuStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 11.0, deprecated: 100000.0, message: \"Use .menuStyle(.button) and .buttonStyle(.bordered).\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "BorderedButtonMenuStyle",
        "conformances": [
            "MenuStyle "
        ]
    },
    {
        "struct": "public struct OutlineGroup<Data, ID, Parent, Leaf, Subgroup> where Data : Swift.RandomAccessCollection, ID : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "OutlineGroup",
        "generics": [
            "Data",
            "ID",
            "Parent",
            "Leaf",
            "Subgroup"
        ],
        "conformances": [],
        "conditions": {
            "Data": "RandomAccessCollection",
            "ID": "Hashable"
        },
        "condition_relations": {
            "Data": ":",
            "ID": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct OutlineSubgroupChildren : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "OutlineSubgroupChildren",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableColumn<RowValue, Sort, Content, Label> : SwiftUI.TableColumnContent where RowValue : Swift.Identifiable, Sort : Foundation.SortComparator, Content : SwiftUICore.View, Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumn",
        "generics": [
            "RowValue",
            "Sort",
            "Content",
            "Label"
        ],
        "conformances": [
            "TableColumnContent "
        ],
        "conditions": {
            "RowValue": "Identifiable",
            "Sort": "SortComparator",
            "Content": "View",
            "Label": "View"
        },
        "condition_relations": {
            "RowValue": ":",
            "Sort": ":",
            "Content": ":",
            "Label": ":"
        }
    },
    {
        "struct": "public struct _SceneOutputs {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_SceneOutputs",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ItemProviderTableRowModifier : SwiftUI._TableRowContentModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ItemProviderTableRowModifier",
        "conformances": [
            "_TableRowContentModifier "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct OnInsertTableRowModifier : SwiftUI._TableRowContentModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "OnInsertTableRowModifier",
        "conformances": [
            "_TableRowContentModifier "
        ]
    },
    {
        "struct": "public struct TextInputAutocapitalization : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, tvOS 15.0, watchOS 8.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "TextInputAutocapitalization",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DragGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 6.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DragGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@propertyWrapper @frozen public struct GestureState<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "GestureState",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct GestureStateGesture<Base, State> : SwiftUICore.Gesture where Base : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "GestureStateGesture",
        "generics": [
            "Base",
            "State"
        ],
        "conformances": [
            "Gesture "
        ],
        "conditions": {
            "Base": "Gesture"
        },
        "condition_relations": {
            "Base": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Slider<Label, ValueLabel> : SwiftUICore.View where Label : SwiftUICore.View, ValueLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 6.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "Slider",
        "generics": [
            "Label",
            "ValueLabel"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "ValueLabel": "View"
        },
        "condition_relations": {
            "Label": ":",
            "ValueLabel": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _SymmetricallyScaledText : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_SymmetricallyScaledText",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct TableColumnCustomization<RowValue> : Swift.Equatable, Swift.Sendable, Swift.Codable where RowValue : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumnCustomization",
        "generics": [
            "RowValue"
        ],
        "conformances": [
            "Equatable",
            "Sendable",
            "Codable "
        ],
        "conditions": {
            "RowValue": "Identifiable"
        },
        "condition_relations": {
            "RowValue": ":"
        }
    },
    {
        "struct": "public struct DefaultWindowToolbarStyle : SwiftUI.WindowToolbarStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DefaultWindowToolbarStyle",
        "conformances": [
            "WindowToolbarStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ProgressView<Label, CurrentValueLabel> : SwiftUICore.View where Label : SwiftUICore.View, CurrentValueLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ProgressView",
        "generics": [
            "Label",
            "CurrentValueLabel"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "CurrentValueLabel": "View"
        },
        "condition_relations": {
            "Label": ":",
            "CurrentValueLabel": ":"
        }
    },
    {
        "struct": "public struct LabeledContent<Label, Content> {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LabeledContent",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": []
    },
    {
        "struct": "public struct _IndexViewStyleConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, tvOS 14.0, watchOS 8.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "_IndexViewStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EmptyWidgetConfiguration : SwiftUI.WidgetConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "EmptyWidgetConfiguration",
        "conformances": [
            "WidgetConfiguration "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct EmptyTableRowContent<Value> where Value : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "EmptyTableRowContent",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Identifiable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableHeaderRowContent<Value, Content> : SwiftUI.TableRowContent where Value : Swift.Identifiable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableHeaderRowContent",
        "generics": [
            "Value",
            "Content"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Value": "Identifiable",
            "Content": "View"
        },
        "condition_relations": {
            "Value": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct MenuOrder : Swift.Equatable, Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "MenuOrder",
        "conformances": [
            "Equatable",
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct PlaceholderTextShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "PlaceholderTextShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct _TabViewValue<Style, SelectionValue> where Style : SwiftUI.TabViewStyle, SelectionValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_TabViewValue",
        "generics": [
            "Style",
            "SelectionValue"
        ],
        "conformances": [],
        "conditions": {
            "Style": "TabViewStyle",
            "SelectionValue": "Hashable"
        },
        "condition_relations": {
            "Style": ":",
            "SelectionValue": ":"
        }
    },
    {
        "struct": "public struct DisclosureGroupStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DisclosureGroupStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct DefaultFocusEvaluationPriority : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "DefaultFocusEvaluationPriority",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct WindowInteractionBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowInteractionBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct WindowManagerRole : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "WindowManagerRole",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticLabeledContentStyle : SwiftUI.LabeledContentStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AutomaticLabeledContentStyle",
        "conformances": [
            "LabeledContentStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _IndefiniteSymbolEffectModifier : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_IndefiniteSymbolEffectModifier",
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _DiscreteSymbolEffectModifier<T> : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier where T : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_DiscreteSymbolEffectModifier",
        "generics": [
            "T"
        ],
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ],
        "conditions": {
            "T": "Equatable"
        },
        "condition_relations": {
            "T": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ConditionalSymbolEffectModifier : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ConditionalSymbolEffectModifier",
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct SymbolEffectTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SymbolEffectTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "public struct SpatialEventCollection : Swift.Collection {",
        "availabilities": [
            "@available(visionOS 1.0, iOS 18.0, macOS 15.0, watchOS 11.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "SpatialEventCollection",
        "conformances": [
            "Collection "
        ]
    },
    {
        "struct": "public struct WindowMenuBarExtraStyle : SwiftUI.MenuBarExtraStyle {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowMenuBarExtraStyle",
        "conformances": [
            "MenuBarExtraStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LinearProgressViewStyle : SwiftUI.ProgressViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LinearProgressViewStyle",
        "conformances": [
            "ProgressViewStyle "
        ]
    },
    {
        "struct": "public struct PagingScrollTargetBehavior : SwiftUI.ScrollTargetBehavior {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "PagingScrollTargetBehavior",
        "conformances": [
            "ScrollTargetBehavior "
        ]
    },
    {
        "struct": "public struct ViewAlignedScrollTargetBehavior : SwiftUI.ScrollTargetBehavior {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ViewAlignedScrollTargetBehavior",
        "conformances": [
            "ScrollTargetBehavior "
        ]
    },
    {
        "struct": "@frozen public struct AnyScrollTargetBehavior : SwiftUI.ScrollTargetBehavior {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "AnyScrollTargetBehavior",
        "conformances": [
            "ScrollTargetBehavior "
        ]
    },
    {
        "struct": "public struct TabCustomizationBehavior : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabCustomizationBehavior",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GroupElementsOfContent<Subviews, Content> : SwiftUICore.View where Subviews : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "GroupElementsOfContent",
        "generics": [
            "Subviews",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Subviews": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Subviews": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct SubviewsCollection : Swift.RandomAccessCollection {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SubviewsCollection",
        "conformances": [
            "RandomAccessCollection "
        ]
    },
    {
        "struct": "public struct SubviewsCollectionSlice : Swift.RandomAccessCollection {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SubviewsCollectionSlice",
        "conformances": [
            "RandomAccessCollection "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _LayoutDirectionBehaviorEffect : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_LayoutDirectionBehaviorEffect",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CircularProgressViewStyle : SwiftUI.ProgressViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "CircularProgressViewStyle",
        "conformances": [
            "ProgressViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Toggle<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Toggle",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TaskModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_TaskModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TaskValueModifier<Value> : SwiftUICore.ViewModifier where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_TaskValueModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct RotationGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, renamed: \"RotateGesture\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, renamed: \"RotateGesture\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, renamed: \"RotateGesture\")"
        ],
        "name": "RotationGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct RotateGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "RotateGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TextField<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "TextField",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct _IsLinkedGroupTraitKey {",
        "availabilities": [
            "@available(watchOS 6.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_IsLinkedGroupTraitKey",
        "conformances": []
    },
    {
        "struct": "public struct SpringLoadingBehavior : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SpringLoadingBehavior",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct __DesignTimeSelectionIdentifier : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "__DesignTimeSelectionIdentifier",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct TabBarPlacement : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabBarPlacement",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct RadioGroupPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "RadioGroupPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct InsetListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "InsetListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LinkButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "LinkButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct EditActions<Data> : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "EditActions",
        "generics": [
            "Data"
        ],
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct EditableCollectionContent<Content, Data> {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "EditableCollectionContent",
        "generics": [
            "Content",
            "Data"
        ],
        "conformances": []
    },
    {
        "struct": "public struct IndexedIdentifierCollection<Base, ID> : Swift.Collection where Base : Swift.Collection, ID : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "IndexedIdentifierCollection",
        "generics": [
            "Base",
            "ID"
        ],
        "conformances": [
            "Collection "
        ],
        "conditions": {
            "Base": "Collection",
            "ID": "Hashable"
        },
        "condition_relations": {
            "Base": ":",
            "ID": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GeometryActionModifier<Value> where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_GeometryActionModifier",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GeometryActionModifier2<Value> where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 10.0, *)"
        ],
        "name": "_GeometryActionModifier2",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct FileDocumentWriteConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "FileDocumentWriteConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct FileDocumentReadConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "FileDocumentReadConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct ForEachSectionCollection<Content> : Swift.RandomAccessCollection where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ForEachSectionCollection",
        "generics": [
            "Content"
        ],
        "conformances": [
            "RandomAccessCollection "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct NavigationSplitViewStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "NavigationSplitViewStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct DefaultWindowStyle : SwiftUI.WindowStyle {",
        "availabilities": [
            "@available(macOS 11.0, visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DefaultWindowStyle",
        "conformances": [
            "WindowStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AllowsHitTestingModifier : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AllowsHitTestingModifier",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct LinkShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "LinkShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ContentShapeKindModifier<ContentShape> : SwiftUICore.ViewModifier where ContentShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ContentShapeKindModifier",
        "generics": [
            "ContentShape"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "ContentShape": "Shape"
        },
        "condition_relations": {
            "ContentShape": ":"
        }
    },
    {
        "struct": "public struct NavigationPath {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "NavigationPath",
        "conformances": []
    },
    {
        "struct": "public struct AnimationCompletionCriteria : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "AnimationCompletionCriteria",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ScrollTransitionConfiguration {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ScrollTransitionConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct ToolbarItemPlacement {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ToolbarItemPlacement",
        "conformances": []
    },
    {
        "struct": "public struct PullDownMenuBarExtraStyle : SwiftUI.MenuBarExtraStyle {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PullDownMenuBarExtraStyle",
        "conformances": [
            "MenuBarExtraStyle "
        ]
    },
    {
        "struct": "public struct _SystemShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 13.0, message: \"Use `HierarchicalShapeStyle` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_SystemShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableRow<Value> : SwiftUI.TableRowContent where Value : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableRow",
        "generics": [
            "Value"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Value": "Identifiable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _TypeSelectEquivalentTableRowModifier : SwiftUI._TableRowContentModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_TypeSelectEquivalentTableRowModifier",
        "conformances": [
            "_TableRowContentModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _HoverRegionModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.4, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_HoverRegionModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct List<SelectionValue, Content> : SwiftUICore.View where SelectionValue : Swift.Hashable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "List",
        "generics": [
            "SelectionValue",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "SelectionValue": "Hashable",
            "Content": "View"
        },
        "condition_relations": {
            "SelectionValue": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PreferenceActionModifier<Key> : SwiftUICore.ViewModifier where Key : SwiftUICore.PreferenceKey, Key.Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PreferenceActionModifier",
        "generics": [
            "Key"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Key": "PreferenceKey",
            "Key.Value": "Equatable"
        },
        "condition_relations": {
            "Key": ":",
            "Key.Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ToolbarItem<ID, Content> : SwiftUI.ToolbarContent where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ToolbarItem",
        "generics": [
            "ID",
            "Content"
        ],
        "conformances": [
            "ToolbarContent "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct GroupedListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 13.0, tvOS 13.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "GroupedListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct WindowLayoutRoot {",
        "availabilities": [
            "@available(macOS 15.0, visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowLayoutRoot",
        "conformances": []
    },
    {
        "struct": "public struct FileDialogBrowserOptions : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "FileDialogBrowserOptions",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "@frozen @propertyWrapper public struct SceneStorage<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "SceneStorage",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Menu<Label, Content> : SwiftUICore.View where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "Menu",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct InlinePickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "InlinePickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct _WidgetOutputs {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "_WidgetOutputs",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _HoverTableRowModifier : SwiftUI._TableRowContentModifier {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_HoverTableRowModifier",
        "conformances": [
            "_TableRowContentModifier "
        ]
    },
    {
        "struct": "public struct DigitalCrownEvent : Swift.Sendable {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DigitalCrownEvent",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PaletteControlGroupStyle : SwiftUI.ControlGroupStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PaletteControlGroupStyle",
        "conformances": [
            "ControlGroupStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _CALayerView<LayerType> : SwiftUICore.View where LayerType : QuartzCore.CALayer {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_CALayerView",
        "generics": [
            "LayerType"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "LayerType": "CALayer"
        },
        "condition_relations": {
            "LayerType": ":"
        }
    },
    {
        "struct": "@frozen @propertyWrapper public struct AppStorage<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "AppStorage",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "public struct _NavigationDestinationCollection {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_NavigationDestinationCollection",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SidebarAdaptableTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SidebarAdaptableTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ReferenceFileDocumentConfiguration<Document> where Document : SwiftUI.ReferenceFileDocument {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ReferenceFileDocumentConfiguration",
        "generics": [
            "Document"
        ],
        "conformances": [],
        "conditions": {
            "Document": "ReferenceFileDocument"
        },
        "condition_relations": {
            "Document": ":"
        }
    },
    {
        "struct": "public struct RoundedBorderTextFieldStyle : SwiftUI.TextFieldStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "RoundedBorderTextFieldStyle",
        "conformances": [
            "TextFieldStyle "
        ]
    },
    {
        "struct": "public struct NavigationBarItem : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, tvOS 13.0, watchOS 6.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "NavigationBarItem",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _SceneModifier_Content<Modifier> : SwiftUI.Scene where Modifier : SwiftUI._SceneModifier {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_SceneModifier_Content",
        "generics": [
            "Modifier"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Modifier": "_SceneModifier"
        },
        "condition_relations": {
            "Modifier": ":"
        }
    },
    {
        "struct": "public struct ScenePadding : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ScenePadding",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor public struct OpenImmersiveSpaceAction : Swift.Sendable {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "OpenImmersiveSpaceAction",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct TableColumnCustomizationBehavior : Swift.SetAlgebra, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumnCustomizationBehavior",
        "conformances": [
            "SetAlgebra",
            "Sendable "
        ]
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor @propertyWrapper public struct UIApplicationDelegateAdaptor<DelegateType> : SwiftUICore.DynamicProperty where DelegateType : ObjectiveC.NSObject, DelegateType : UIKit.UIApplicationDelegate {",
        "availabilities": [
            "@available(iOS 14.0, tvOS 14.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "UIApplicationDelegateAdaptor",
        "generics": [
            "DelegateType"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "DelegateType": "UIApplicationDelegate"
        },
        "condition_relations": {
            "DelegateType": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ContextMenuTableRowModifier<MenuItems> : SwiftUI._TableRowContentModifier where MenuItems : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_ContextMenuTableRowModifier",
        "generics": [
            "MenuItems"
        ],
        "conformances": [
            "_TableRowContentModifier "
        ],
        "conditions": {
            "MenuItems": "View"
        },
        "condition_relations": {
            "MenuItems": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ContextMenuPreviewTableRowModifier<MenuItems, Preview> : SwiftUI._TableRowContentModifier where MenuItems : SwiftUICore.View, Preview : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_ContextMenuPreviewTableRowModifier",
        "generics": [
            "MenuItems",
            "Preview"
        ],
        "conformances": [
            "_TableRowContentModifier "
        ],
        "conditions": {
            "MenuItems": "View",
            "Preview": "View"
        },
        "condition_relations": {
            "MenuItems": ":",
            "Preview": ":"
        }
    },
    {
        "struct": "public struct _AccessibilityRotorEntryInputs {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_AccessibilityRotorEntryInputs",
        "conformances": []
    },
    {
        "struct": "public struct _AccessibilityRotorEntryOutputs {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_AccessibilityRotorEntryOutputs",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct AccessibilityRotorContentBuilder {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityRotorContentBuilder",
        "conformances": []
    },
    {
        "struct": "public struct PresentationMode {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"Use EnvironmentValues.isPresented or EnvironmentValues.dismiss\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use EnvironmentValues.isPresented or EnvironmentValues.dismiss\")",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"Use EnvironmentValues.isPresented or EnvironmentValues.dismiss\")",
            "@available(watchOS, introduced: 6.0, deprecated: 100000.0, message: \"Use EnvironmentValues.isPresented or EnvironmentValues.dismiss\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"Use EnvironmentValues.isPresented or EnvironmentValues.dismiss\")"
        ],
        "name": "PresentationMode",
        "conformances": []
    },
    {
        "struct": "public struct PrimitiveButtonStyleConfiguration {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PrimitiveButtonStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticControlGroupStyle : SwiftUI.ControlGroupStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AutomaticControlGroupStyle",
        "conformances": [
            "ControlGroupStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultGroupBoxStyle : SwiftUI.GroupBoxStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DefaultGroupBoxStyle",
        "conformances": [
            "GroupBoxStyle "
        ]
    },
    {
        "struct": "@frozen @propertyWrapper public struct FocusState<Value> : SwiftUICore.DynamicProperty where Value : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "FocusState",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "Value": "Hashable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PositionLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PositionLayout",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticTextEditorStyle : SwiftUI.TextEditorStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AutomaticTextEditorStyle",
        "conformances": [
            "TextEditorStyle "
        ]
    },
    {
        "struct": "public struct AnimationTimelineSchedule : SwiftUICore.TimelineSchedule, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AnimationTimelineSchedule",
        "conformances": [
            "TimelineSchedule",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PlainButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PlainButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct SubmitLabel : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SubmitLabel",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct _NavigationTransitionInputs : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_NavigationTransitionInputs",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct _NavigationTransitionOutputs : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_NavigationTransitionOutputs",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct AutomaticNavigationTransition : SwiftUI.NavigationTransition {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "AutomaticNavigationTransition",
        "conformances": [
            "NavigationTransition "
        ]
    },
    {
        "struct": "public struct ZoomNavigationTransition : SwiftUI.NavigationTransition {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "ZoomNavigationTransition",
        "conformances": [
            "NavigationTransition "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Divider : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Divider",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ButtonMenuStyle : SwiftUI.MenuStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ButtonMenuStyle",
        "conformances": [
            "MenuStyle "
        ]
    },
    {
        "struct": "public struct ToolbarCustomizationBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ToolbarCustomizationBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor public struct PushWindowAction {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PushWindowAction",
        "conformances": []
    },
    {
        "struct": "public struct SceneLaunchBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SceneLaunchBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TextFieldLink<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "TextFieldLink",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct WindowIdealSize : Swift.Sendable {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowIdealSize",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct PencilHoverPose : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 17.5, macOS 14.5, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PencilHoverPose",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct LimitedAvailabilityConfiguration : SwiftUI.WidgetConfiguration {",
        "availabilities": [
            "@available(iOS 16.1, macOS 13.0, watchOS 9.1, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "LimitedAvailabilityConfiguration",
        "conformances": [
            "WidgetConfiguration "
        ]
    },
    {
        "struct": "public struct RefreshAction : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "RefreshAction",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_functionBuilder public struct ImmersiveSpaceContentBuilder {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ImmersiveSpaceContentBuilder",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ProminentDetailNavigationSplitViewStyle : SwiftUI.NavigationSplitViewStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ProminentDetailNavigationSplitViewStyle",
        "conformances": [
            "NavigationSplitViewStyle "
        ]
    },
    {
        "struct": "public struct SearchFieldPlacement : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SearchFieldPlacement",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct _ProjectionEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ProjectionEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SettingsLink<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "SettingsLink",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultSettingsLinkLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DefaultSettingsLinkLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@frozen public struct _TransformEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TransformEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "public struct HoverEffect {",
        "availabilities": [
            "@available(iOS 13.4, tvOS 16.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "HoverEffect",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryBarButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AccessoryBarButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryBarActionButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AccessoryBarActionButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct ButtonRole : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "ButtonRole",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ToolbarInputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_ToolbarInputs",
        "conformances": []
    },
    {
        "struct": "public struct _ToolbarOutputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_ToolbarOutputs",
        "conformances": []
    },
    {
        "struct": "public struct _ToolbarItemList {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ToolbarItemList",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct ToolbarContentBuilder {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ToolbarContentBuilder",
        "conformances": []
    },
    {
        "struct": "public struct HiddenTitleBarWindowStyle : SwiftUI.WindowStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "HiddenTitleBarWindowStyle",
        "conformances": [
            "WindowStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct IconOnlyLabelStyle : SwiftUI.LabelStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "IconOnlyLabelStyle",
        "conformances": [
            "LabelStyle "
        ]
    },
    {
        "struct": "public struct _NavigationViewStyleConfiguration {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 7.0, *)"
        ],
        "name": "_NavigationViewStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct AccessibilityTechnologies : Swift.SetAlgebra, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityTechnologies",
        "conformances": [
            "SetAlgebra",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MagnificationGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, renamed: \"MagnifyGesture\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, renamed: \"MagnifyGesture\")",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, renamed: \"MagnifyGesture\")"
        ],
        "name": "MagnificationGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MagnifyGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "MagnifyGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "public struct ContextMenu<MenuItems> where MenuItems : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"Use `contextMenu(menuItems:)` instead.\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `contextMenu(menuItems:)` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, introduced: 6.0, deprecated: 7.0)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"Use `contextMenu(menuItems:)` instead.\")"
        ],
        "name": "ContextMenu",
        "generics": [
            "MenuItems"
        ],
        "conformances": [],
        "conditions": {
            "MenuItems": "View"
        },
        "condition_relations": {
            "MenuItems": ":"
        }
    },
    {
        "struct": "public struct WindowToolbarFullScreenVisibility : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "WindowToolbarFullScreenVisibility",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NewDocumentButton<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, visionOS 2.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "NewDocumentButton",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct ContainerValues {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ContainerValues",
        "conformances": []
    },
    {
        "struct": "public struct SubmitTriggers : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SubmitTriggers",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct InsetGroupedListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 14.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "InsetGroupedListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct _PlatformViewRepresentableLayoutOptions : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 16.1, macOS 13.0, tvOS 16.1, watchOS 9.1, *)"
        ],
        "name": "_PlatformViewRepresentableLayoutOptions",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "public struct OrnamentAttachmentAnchor : Swift.Sendable {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "OrnamentAttachmentAnchor",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _TabContentBodyAdaptor<C> : SwiftUICore.View where C : SwiftUI.TabContent {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_TabContentBodyAdaptor",
        "generics": [
            "C"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "C": "TabContent"
        },
        "condition_relations": {
            "C": ":"
        }
    },
    {
        "struct": "@_functionBuilder public struct TabContentBuilder<TabValue> where TabValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabContentBuilder",
        "generics": [
            "TabValue"
        ],
        "conformances": [],
        "conditions": {
            "TabValue": "Hashable"
        },
        "condition_relations": {
            "TabValue": ":"
        }
    },
    {
        "struct": "public struct ScrollContentOffsetAdjustmentBehavior {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollContentOffsetAdjustmentBehavior",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PageTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, tvOS 14.0, watchOS 7.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "PageTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "public struct PaletteSelectionEffect : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PaletteSelectionEffect",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct ContentMarginPlacement {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ContentMarginPlacement",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryCircularCapacityGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "AccessoryCircularCapacityGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "public struct ButtonStyleConfiguration {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ButtonStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CircularGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(watchOS 7.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "CircularGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _TextFieldStyleLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TextFieldStyleLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct UIHostingConfiguration<Content, Background> : UIKit.UIContentConfiguration where Content : SwiftUICore.View, Background : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, tvOS 16.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "UIHostingConfiguration",
        "generics": [
            "Content",
            "Background"
        ],
        "conformances": [
            "UIContentConfiguration "
        ],
        "conditions": {
            "Content": "View",
            "Background": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Background": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _UIHostingConfigurationBackgroundView<Style> : SwiftUICore.View where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, tvOS 16.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_UIHostingConfigurationBackgroundView",
        "generics": [
            "Style"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "public struct SharePreview<Image, Icon> where Image : CoreTransferable.Transferable, Icon : CoreTransferable.Transferable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "SharePreview",
        "generics": [
            "Image",
            "Icon"
        ],
        "conformances": [],
        "conditions": {
            "Image": "Transferable",
            "Icon": "Transferable"
        },
        "condition_relations": {
            "Image": ":",
            "Icon": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AnchorWritingModifier<AnchorValue, Key> : SwiftUICore.ViewModifier where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AnchorWritingModifier",
        "generics": [
            "AnchorValue",
            "Key"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "public struct DefaultPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "DefaultPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor public struct DismissImmersiveSpaceAction {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DismissImmersiveSpaceAction",
        "conformances": []
    },
    {
        "struct": "public struct PresentationSizingRoot {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "PresentationSizingRoot",
        "conformances": []
    },
    {
        "struct": "public struct PresentationSizingContext {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "PresentationSizingContext",
        "conformances": []
    },
    {
        "struct": "public struct FormPresentationSizing : SwiftUI.PresentationSizing, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "FormPresentationSizing",
        "conformances": [
            "PresentationSizing",
            "Sendable "
        ]
    },
    {
        "struct": "public struct PagePresentationSizing : SwiftUI.PresentationSizing, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "PagePresentationSizing",
        "conformances": [
            "PresentationSizing",
            "Sendable "
        ]
    },
    {
        "struct": "public struct FittedPresentationSizing : SwiftUI.PresentationSizing, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "FittedPresentationSizing",
        "conformances": [
            "PresentationSizing",
            "Sendable "
        ]
    },
    {
        "struct": "public struct AutomaticPresentationSizing : SwiftUI.PresentationSizing, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, watchOS 11.0, *)"
        ],
        "name": "AutomaticPresentationSizing",
        "conformances": [
            "PresentationSizing",
            "Sendable "
        ]
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct UIViewControllerRepresentableContext<Representable> where Representable : SwiftUI.UIViewControllerRepresentable {",
        "availabilities": [
            "@available(iOS 13.0, tvOS 13.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "UIViewControllerRepresentableContext",
        "generics": [
            "Representable"
        ],
        "conformances": [],
        "conditions": {
            "Representable": "UIViewControllerRepresentable"
        },
        "condition_relations": {
            "Representable": ":"
        }
    },
    {
        "struct": "public struct Section<Parent, Content, Footer> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Section",
        "generics": [
            "Parent",
            "Content",
            "Footer"
        ],
        "conformances": []
    },
    {
        "struct": "public struct AutomaticHoverEffect : SwiftUICore.CustomHoverEffect {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AutomaticHoverEffect",
        "conformances": [
            "CustomHoverEffect "
        ]
    },
    {
        "struct": "public struct HighlightHoverEffect : SwiftUICore.CustomHoverEffect {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "HighlightHoverEffect",
        "conformances": [
            "CustomHoverEffect "
        ]
    },
    {
        "struct": "public struct LiftHoverEffect : SwiftUICore.CustomHoverEffect {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "LiftHoverEffect",
        "conformances": [
            "CustomHoverEffect "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NavigationLink<Label, Destination> : SwiftUICore.View where Label : SwiftUICore.View, Destination : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "NavigationLink",
        "generics": [
            "Label",
            "Destination"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Destination": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Destination": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct ViewThatFits<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ViewThatFits",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _SizeFittingRoot : SwiftUICore._VariadicView.UnaryViewRoot {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_SizeFittingRoot",
        "conformances": [
            "_VariadicView"
        ]
    },
    {
        "struct": "public struct _ScrollViewConfig {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollViewConfig",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ScrollView<Provider> : SwiftUICore.View where Provider : SwiftUI._ScrollableContentProvider {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollView",
        "generics": [
            "Provider"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Provider": "_ScrollableContentProvider"
        },
        "condition_relations": {
            "Provider": ":"
        }
    },
    {
        "struct": "public struct _AligningContentProvider<Content> : SwiftUI._ScrollableContentProvider where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AligningContentProvider",
        "generics": [
            "Content"
        ],
        "conformances": [
            "_ScrollableContentProvider "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Link<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "Link",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct _PagingViewConfig : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PagingViewConfig",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _PagingView<Views> : SwiftUICore.View where Views : Swift.RandomAccessCollection, Views.Element : SwiftUICore.View, Views.Index : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PagingView",
        "generics": [
            "Views"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Views": "RandomAccessCollection",
            "Views.Element": "View",
            "Views.Index": "Hashable"
        },
        "condition_relations": {
            "Views": ":",
            "Views.Element": ":",
            "Views.Index": ":"
        }
    },
    {
        "struct": "public struct PlainListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PlainListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct ProgressViewStyleConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ProgressViewStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct PreviewDevice : Swift.RawRepresentable, Swift.ExpressibleByStringLiteral, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PreviewDevice",
        "conformances": [
            "RawRepresentable",
            "ExpressibleByStringLiteral",
            "Sendable "
        ]
    },
    {
        "struct": "public struct InterfaceOrientation : Swift.CaseIterable, Swift.Identifiable, Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "InterfaceOrientation",
        "conformances": [
            "CaseIterable",
            "Identifiable",
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _Preview {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_Preview",
        "conformances": []
    },
    {
        "struct": "public struct ScrollAnchorRole : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollAnchorRole",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ScrollIndicatorVisibility {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ScrollIndicatorVisibility",
        "conformances": []
    },
    {
        "struct": "public struct ScrollInputBehavior : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollInputBehavior",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct ScrollInputKind : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollInputKind",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct ScrollDismissesKeyboardMode : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ScrollDismissesKeyboardMode",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct ScrollBounceBehavior : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "ScrollBounceBehavior",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TableColumnForEach<Data, ID, RowValue, Sort, Content> : SwiftUI.TableColumnContent where Data : Swift.RandomAccessCollection, ID : Swift.Hashable, RowValue == Content.TableRowValue, Sort == Content.TableColumnSortComparator, Content : SwiftUI.TableColumnContent {",
        "availabilities": [
            "@available(iOS 17.4, macOS 14.4, visionOS 1.1, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumnForEach",
        "generics": [
            "Data",
            "ID",
            "RowValue",
            "Sort",
            "Content"
        ],
        "conformances": [
            "TableColumnContent "
        ],
        "conditions": {
            "Data": "RandomAccessCollection",
            "ID": "Hashable",
            "Content": "TableColumnContent"
        },
        "condition_relations": {
            "Data": ":",
            "ID": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct AccessibilityDirectTouchOptions : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "AccessibilityDirectTouchOptions",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ListItemTint : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ListItemTint",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AnyTabContent<SelectionValue> : SwiftUI.TabContent where SelectionValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "AnyTabContent",
        "generics": [
            "SelectionValue"
        ],
        "conformances": [
            "TabContent "
        ],
        "conditions": {
            "SelectionValue": "Hashable"
        },
        "condition_relations": {
            "SelectionValue": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CheckboxToggleStyle : SwiftUI.ToggleStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "CheckboxToggleStyle",
        "conformances": [
            "ToggleStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct RoundedBorderTextEditorStyle : SwiftUI.TextEditorStyle {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "RoundedBorderTextEditorStyle",
        "conformances": [
            "TextEditorStyle "
        ]
    },
    {
        "struct": "public struct ContainerBackgroundPlacement : Swift.Sendable, Swift.Hashable {",
        "availabilities": [
            "@available(iOS 17.0, tvOS 17.0, macOS 14.0, watchOS 10.0, *)"
        ],
        "name": "ContainerBackgroundPlacement",
        "conformances": [
            "Sendable",
            "Hashable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GroupBox<Label, Content> : SwiftUICore.View where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "GroupBox",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct InsetTableStyle : SwiftUI.TableStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "InsetTableStyle",
        "conformances": [
            "TableStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ImmersiveSpaceViewContent<Content> : SwiftUI.ImmersiveSpaceContent where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ImmersiveSpaceViewContent",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ImmersiveSpaceContent "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct ForEachSubviewCollection<Content> : Swift.RandomAccessCollection where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ForEachSubviewCollection",
        "generics": [
            "Content"
        ],
        "conformances": [
            "RandomAccessCollection "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct _PickerValue<Style, SelectionValue> where Style : SwiftUI.PickerStyle, SelectionValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PickerValue",
        "generics": [
            "Style",
            "SelectionValue"
        ],
        "conformances": [],
        "conditions": {
            "Style": "PickerStyle",
            "SelectionValue": "Hashable"
        },
        "condition_relations": {
            "Style": ":",
            "SelectionValue": ":"
        }
    },
    {
        "struct": "public struct SegmentedPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SegmentedPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LinearCapacityGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "LinearCapacityGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AlertScene<Actions, Message> : SwiftUI.Scene where Actions : SwiftUICore.View, Message : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "AlertScene",
        "generics": [
            "Actions",
            "Message"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Actions": "View",
            "Message": "View"
        },
        "condition_relations": {
            "Actions": ":",
            "Message": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TabBarOnlyTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TabBarOnlyTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "public struct __UniversalListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "__UniversalListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct ListSectionSpacing : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, watchOS 10.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "ListSectionSpacing",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_functionBuilder public struct ControlWidgetConfigurationBuilder {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ControlWidgetConfigurationBuilder",
        "conformances": []
    },
    {
        "struct": "public struct WindowPlacement : Swift.Equatable {",
        "availabilities": [
            "@available(macOS 15.0, visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowPlacement",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct WindowPlacementContext {",
        "availabilities": [
            "@available(macOS 15.0, visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowPlacementContext",
        "conformances": []
    },
    {
        "struct": "public struct DisplayProxy : Swift.Equatable {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DisplayProxy",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct WindowProxy {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "WindowProxy",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Form<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Form",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct EmptyCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "EmptyCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "public struct _ResolvedCommands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_ResolvedCommands",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct CommandsBuilder {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CommandsBuilder",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MultiDatePicker<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "MultiDatePicker",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct PencilDoubleTapGestureValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 17.5, macOS 14.5, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PencilDoubleTapGestureValue",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct PencilSqueezeGestureValue : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 17.5, macOS 14.5, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PencilSqueezeGestureValue",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct ScrollPhaseChangeContext {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollPhaseChangeContext",
        "conformances": []
    },
    {
        "struct": "public struct TabRole : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabRole",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ToolbarCustomizationOptions : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ToolbarCustomizationOptions",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct MenuActionDismissBehavior : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "MenuActionDismissBehavior",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct HSplitView<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "HSplitView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct VSplitView<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "VSplitView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _SplitViewContainer : SwiftUICore._VariadicView.UnaryViewRoot {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_SplitViewContainer",
        "conformances": [
            "_VariadicView"
        ]
    },
    {
        "struct": "public struct PullDownMenuButtonStyle : SwiftUI.MenuButtonStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `BorderedButtonMenuStyle` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PullDownMenuButtonStyle",
        "conformances": [
            "MenuButtonStyle "
        ]
    },
    {
        "struct": "public struct BorderlessPullDownMenuButtonStyle : SwiftUI.MenuButtonStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `BorderlessButtonMenuStyle` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "BorderlessPullDownMenuButtonStyle",
        "conformances": [
            "MenuButtonStyle "
        ]
    },
    {
        "struct": "public struct BorderlessButtonMenuButtonStyle : SwiftUI.MenuButtonStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `BorderlessButtonMenuStyle` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "BorderlessButtonMenuButtonStyle",
        "conformances": [
            "MenuButtonStyle "
        ]
    },
    {
        "struct": "public struct _TexturedPullDownMenuButtonStyle : SwiftUI.MenuButtonStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `TexturedButtonMenuStyle` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_TexturedPullDownMenuButtonStyle",
        "conformances": [
            "MenuButtonStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TextEditingCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TextEditingCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TextFormattingCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TextFormattingCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "public struct TableColumnAlignment : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumnAlignment",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DisclosureGroup<Label, Content> : SwiftUICore.View where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DisclosureGroup",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct PlainWindowStyle : SwiftUI.WindowStyle {",
        "availabilities": [
            "@available(macOS 15.0, visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PlainWindowStyle",
        "conformances": [
            "WindowStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Picker<Label, SelectionValue, Content> : SwiftUICore.View where Label : SwiftUICore.View, SelectionValue : Swift.Hashable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Picker",
        "generics": [
            "Label",
            "SelectionValue",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "SelectionValue": "Hashable",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "SelectionValue": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct PalettePickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PalettePickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct Tab<Value, Content, Label> {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "Tab",
        "generics": [
            "Value",
            "Content",
            "Label"
        ],
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LazyHStack<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LazyHStack",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AsyncImage<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AsyncImage",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct DismissSearchAction {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "DismissSearchAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _PullDownButton<Label, Content> where Label : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_PullDownButton",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Label": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct SelectionShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SelectionShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct DefaultMenuButtonStyle : SwiftUI.MenuButtonStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `menuStyle(.automatic)` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "DefaultMenuButtonStyle",
        "conformances": [
            "MenuButtonStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TitleAndIconLabelStyle : SwiftUI.LabelStyle {",
        "availabilities": [
            "@available(iOS 14.5, macOS 11.3, tvOS 14.5, watchOS 7.4, *)"
        ],
        "name": "TitleAndIconLabelStyle",
        "conformances": [
            "LabelStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct UtilityWindow<Content> : SwiftUI.Scene where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "UtilityWindow",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ScrollView<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ScrollView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticNavigationSplitViewStyle : SwiftUI.NavigationSplitViewStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AutomaticNavigationSplitViewStyle",
        "conformances": [
            "NavigationSplitViewStyle "
        ]
    },
    {
        "struct": "public struct _ResolvedMatchedTransitionSourceConfiguration : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ResolvedMatchedTransitionSourceConfiguration",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct EmptyMatchedTransitionSourceConfiguration : SwiftUI.MatchedTransitionSourceConfiguration {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "EmptyMatchedTransitionSourceConfiguration",
        "conformances": [
            "MatchedTransitionSourceConfiguration "
        ]
    },
    {
        "struct": "public struct AccessibilityRotorEntry<ID> where ID : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityRotorEntry",
        "generics": [
            "ID"
        ],
        "conformances": [],
        "conditions": {
            "ID": "Hashable"
        },
        "condition_relations": {
            "ID": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NavigationStack<Data, Root> : SwiftUICore.View where Root : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "NavigationStack",
        "generics": [
            "Data",
            "Root"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Root": "View"
        },
        "condition_relations": {
            "Root": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GroupedFormStyle : SwiftUI.FormStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "GroupedFormStyle",
        "conformances": [
            "FormStyle "
        ]
    },
    {
        "struct": "public struct ButtonBorderShape : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "ButtonBorderShape",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessibilityAttachmentModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AccessibilityAttachmentModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct DefaultNavigationViewStyle : SwiftUI.NavigationViewStyle {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationSplitView instead\")",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")",
            "@available(watchOS, introduced: 7.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")"
        ],
        "name": "DefaultNavigationViewStyle",
        "conformances": [
            "NavigationViewStyle "
        ]
    },
    {
        "struct": "public struct Viewpoint3D : Swift.Equatable, Swift.Sendable, Swift.CustomDebugStringConvertible {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "Viewpoint3D",
        "conformances": [
            "Equatable",
            "Sendable",
            "CustomDebugStringConvertible "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _CoordinateSpaceModifier<Name> : SwiftUICore.ViewModifier, Swift.Equatable where Name : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_CoordinateSpaceModifier",
        "generics": [
            "Name"
        ],
        "conformances": [
            "ViewModifier",
            "Equatable "
        ],
        "conditions": {
            "Name": "Hashable"
        },
        "condition_relations": {
            "Name": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ControlGroup<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ControlGroup",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LabeledControlGroupContent<Content, Label> : SwiftUICore.View where Content : SwiftUICore.View, Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "LabeledControlGroupContent",
        "generics": [
            "Content",
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View",
            "Label": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Label": ":"
        }
    },
    {
        "struct": "public struct DocumentConfiguration {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DocumentConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryLinearGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "AccessoryLinearGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PresentedWindowContent<Data, Content> : SwiftUICore.View where Data : Swift.Decodable, Data : Swift.Encodable, Data : Swift.Hashable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PresentedWindowContent",
        "generics": [
            "Data",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Data": "Hashable",
            "Content": "View"
        },
        "condition_relations": {
            "Data": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultMenuStyle : SwiftUI.MenuStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DefaultMenuStyle",
        "conformances": [
            "MenuStyle "
        ]
    },
    {
        "struct": "public struct AccessibilitySystemRotor : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilitySystemRotor",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct FormStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "FormStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct _TableColumnInputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_TableColumnInputs",
        "conformances": []
    },
    {
        "struct": "public struct _TableColumnOutputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_TableColumnOutputs",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct TableColumnBuilder<RowValue, Sort> where RowValue : Swift.Identifiable, Sort : Foundation.SortComparator {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableColumnBuilder",
        "generics": [
            "RowValue",
            "Sort"
        ],
        "conformances": [],
        "conditions": {
            "RowValue": "Identifiable",
            "Sort": "SortComparator"
        },
        "condition_relations": {
            "RowValue": ":",
            "Sort": ":"
        }
    },
    {
        "struct": "public struct TabSection<Header, Content, Footer, SelectionValue> {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabSection",
        "generics": [
            "Header",
            "Content",
            "Footer",
            "SelectionValue"
        ],
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultTabLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "DefaultTabLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct EllipticalListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(watchOS 7.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "EllipticalListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NavigationControlGroupStyle : SwiftUI.ControlGroupStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "NavigationControlGroupStyle",
        "conformances": [
            "ControlGroupStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct VerticalPageTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(watchOS 10.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "VerticalPageTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ToolbarCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ToolbarCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SidebarCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "SidebarCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct InspectorCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "InspectorCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ImportFromDevicesCommands : SwiftUI.Commands {",
        "availabilities": [
            "@available(macOS 12.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ImportFromDevicesCommands",
        "conformances": [
            "Commands "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EquatableView<Content> : SwiftUICore.View where Content : Swift.Equatable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EquatableView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct VolumeViewpointUpdateStrategy : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "VolumeViewpointUpdateStrategy",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct AutomaticMenuBarExtraStyle : SwiftUI.MenuBarExtraStyle {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "AutomaticMenuBarExtraStyle",
        "conformances": [
            "MenuBarExtraStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultProgressViewStyle : SwiftUI.ProgressViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "DefaultProgressViewStyle",
        "conformances": [
            "ProgressViewStyle "
        ]
    },
    {
        "struct": "public struct _MenuBarExtraValue<Style> where Style : SwiftUI.MenuBarExtraStyle {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_MenuBarExtraValue",
        "generics": [
            "Style"
        ],
        "conformances": [],
        "conditions": {
            "Style": "MenuBarExtraStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CommandMenu<Content> : SwiftUI.Commands where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CommandMenu",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Commands "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AccessibilityIgnoresInvertColorsViewModifier {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_AccessibilityIgnoresInvertColorsViewModifier",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SecureField<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "SecureField",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderlessButtonMenuStyle : SwiftUI.MenuStyle {",
        "availabilities": [
            "@available(iOS, introduced: 14.0, deprecated: 100000.0, message: \"Use .menuStyle(.button) and .buttonStyle(.borderless).\")",
            "@available(macOS, introduced: 11.0, deprecated: 100000.0, message: \"Use .menuStyle(.button) and .buttonStyle(.borderless).\")",
            "@available(tvOS, introduced: 17.0, deprecated: 100000.0, message: \"Use .menuStyle(.button) and .buttonStyle(.borderless).\")",
            "@available(watchOS, unavailable)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"Use .menuStyle(.button) and .buttonStyle(.borderless).\")"
        ],
        "name": "BorderlessButtonMenuStyle",
        "conformances": [
            "MenuStyle "
        ]
    },
    {
        "struct": "@_functionBuilder public struct ControlWidgetTemplateBuilder {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ControlWidgetTemplateBuilder",
        "conformances": []
    },
    {
        "struct": "public struct DialogSeverity : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 13.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "DialogSeverity",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MenuControlGroupStyle : SwiftUI.ControlGroupStyle {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "MenuControlGroupStyle",
        "conformances": [
            "ControlGroupStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CompactMenuControlGroupStyle : SwiftUI.ControlGroupStyle {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CompactMenuControlGroupStyle",
        "conformances": [
            "ControlGroupStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ScrollViewBoundsModifier<Result> : SwiftUICore.ViewModifier where Result : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)",
            "@available(*, deprecated, message: \"Use visualEffect, scrollTransition, or onGeometryChange instead\")"
        ],
        "name": "_ScrollViewBoundsModifier",
        "generics": [
            "Result"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Result": "ViewModifier"
        },
        "condition_relations": {
            "Result": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ScrollViewBoundsModifier2<Result> : SwiftUICore.ViewModifier where Result : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)",
            "@available(*, deprecated, message: \"Use visualEffect, scrollTransition, or onGeometryChange instead\")"
        ],
        "name": "_ScrollViewBoundsModifier2",
        "generics": [
            "Result"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Result": "ViewModifier"
        },
        "condition_relations": {
            "Result": ":"
        }
    },
    {
        "struct": "public struct PlainTextFieldStyle : SwiftUI.TextFieldStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PlainTextFieldStyle",
        "conformances": [
            "TextFieldStyle "
        ]
    },
    {
        "struct": "public struct ToolbarDefaultItemKind {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ToolbarDefaultItemKind",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderedButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 10.15, tvOS 13.0, watchOS 7.0, *)"
        ],
        "name": "BorderedButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "@_functionBuilder public struct SceneBuilder {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, visionOS 1.0, *)"
        ],
        "name": "SceneBuilder",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "DefaultTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PlainTextEditorStyle : SwiftUI.TextEditorStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PlainTextEditorStyle",
        "conformances": [
            "TextEditorStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct WheelDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(iOS 13.0, watchOS 10.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "WheelDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LongPressGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 6.0, tvOS 14.0, *)"
        ],
        "name": "LongPressGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ContentUnavailableView<Label, Description, Actions> : SwiftUICore.View where Label : SwiftUICore.View, Description : SwiftUICore.View, Actions : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ContentUnavailableView",
        "generics": [
            "Label",
            "Description",
            "Actions"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "Description": "View",
            "Actions": "View"
        },
        "condition_relations": {
            "Label": ":",
            "Description": ":",
            "Actions": ":"
        }
    },
    {
        "struct": "public struct SearchUnavailableContent {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SearchUnavailableContent",
        "conformances": []
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct OpenSettingsAction {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "OpenSettingsAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DefaultFocusModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_DefaultFocusModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct _FocusSystem {",
        "availabilities": [
            "@available(macOS 11.0, watchOS 7.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_FocusSystem",
        "conformances": []
    },
    {
        "struct": "public struct ResetFocusAction {",
        "availabilities": [
            "@available(macOS 12.0, tvOS 14.0, watchOS 7.0, *)",
            "@available(iOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ResetFocusAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ControlWidgetAdaptor<Base> : SwiftUI.Widget where Base : SwiftUI.ControlWidget {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_ControlWidgetAdaptor",
        "generics": [
            "Base"
        ],
        "conformances": [
            "Widget "
        ],
        "conditions": {
            "Base": "ControlWidget"
        },
        "condition_relations": {
            "Base": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ModifiersGesture<Content> : SwiftUICore.Gesture where Content : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_ModifiersGesture",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Gesture "
        ],
        "conditions": {
            "Content": "Gesture"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CardButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(tvOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "CardButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DigitalCrownModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(watchOS 6.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_DigitalCrownModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct FileDocumentConfiguration<Document> where Document : SwiftUI.FileDocument {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "FileDocumentConfiguration",
        "generics": [
            "Document"
        ],
        "conformances": [],
        "conditions": {
            "Document": "FileDocument"
        },
        "condition_relations": {
            "Document": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct Grid<Content> where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "Grid",
        "generics": [
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct GridRow<Content> where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "GridRow",
        "generics": [
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GridCellSizeModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_GridCellSizeModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GridAnchorModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_GridAnchorModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GridAlignmentModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_GridAlignmentModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GridUnsizedAxesModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_GridUnsizedAxesModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct GridLayout : SwiftUICore._VariadicView.UnaryViewRoot {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "GridLayout",
        "conformances": [
            "_VariadicView"
        ]
    },
    {
        "struct": "public struct _EventDirections : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EventDirections",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "public struct BackgroundTask<Request, Response> : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "BackgroundTask",
        "generics": [
            "Request",
            "Response"
        ],
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct NSHostingSceneBridgingOptions : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "NSHostingSceneBridgingOptions",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct PencilPreferredAction : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 17.5, macOS 14.5, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PencilPreferredAction",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct DoubleColumnNavigationViewStyle : SwiftUI.NavigationViewStyle {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationSplitView instead\")",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")",
            "@available(watchOS, unavailable)",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"replace styled NavigationView with NavigationStack or NavigationSplitView instead\")"
        ],
        "name": "DoubleColumnNavigationViewStyle",
        "conformances": [
            "NavigationViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct HelpLink : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 14.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "HelpLink",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ShareLink<Data, PreviewImage, PreviewIcon, Label> : SwiftUICore.View where Data : Swift.RandomAccessCollection, PreviewImage : CoreTransferable.Transferable, PreviewIcon : CoreTransferable.Transferable, Label : SwiftUICore.View, Data.Element : CoreTransferable.Transferable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "ShareLink",
        "generics": [
            "Data",
            "PreviewImage",
            "PreviewIcon",
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Data": "RandomAccessCollection",
            "PreviewImage": "Transferable",
            "PreviewIcon": "Transferable",
            "Label": "View",
            "Data.Element": "Transferable"
        },
        "condition_relations": {
            "Data": ":",
            "PreviewImage": ":",
            "PreviewIcon": ":",
            "Label": ":",
            "Data.Element": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultShareLinkLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DefaultShareLinkLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ImmersiveSpace<Content, Data> : SwiftUI.Scene where Content : SwiftUI.ImmersiveSpaceContent, Data : Swift.Decodable, Data : Swift.Encodable, Data : Swift.Hashable {",
        "availabilities": [
            "@available(visionOS 1.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ImmersiveSpace",
        "generics": [
            "Content",
            "Data"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "ImmersiveSpaceContent",
            "Data": "Hashable"
        },
        "condition_relations": {
            "Content": ":",
            "Data": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 10.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DefaultDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct StepperFieldDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "StepperFieldDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct FieldDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "FieldDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GraphicalDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "GraphicalDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticTableStyle : SwiftUI.TableStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "AutomaticTableStyle",
        "conformances": [
            "TableStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryLinearCapacityGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "AccessoryLinearCapacityGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultToggleStyle : SwiftUI.ToggleStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "DefaultToggleStyle",
        "conformances": [
            "ToggleStyle "
        ]
    },
    {
        "struct": "public struct CarouselListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(watchOS 6.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "CarouselListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "public struct _Previewable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_Previewable",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AnchorTransformModifier<AnchorValue, Key> : SwiftUICore.ViewModifier where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AnchorTransformModifier",
        "generics": [
            "AnchorValue",
            "Key"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "public struct BorderedListStyle : SwiftUI.ListStyle {",
        "availabilities": [
            "@available(macOS 12.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "BorderedListStyle",
        "conformances": [
            "ListStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ContentShapeModifier<ContentShape> : SwiftUICore.ViewModifier where ContentShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ContentShapeModifier",
        "generics": [
            "ContentShape"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "ContentShape": "Shape"
        },
        "condition_relations": {
            "ContentShape": ":"
        }
    },
    {
        "struct": "public struct _TableRowInputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_TableRowInputs",
        "conformances": []
    },
    {
        "struct": "public struct _TableRowOutputs {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_TableRowOutputs",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct TableRowBuilder<Value> where Value : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableRowBuilder",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Identifiable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct _IdentifiedViewsKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_IdentifiedViewsKey",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _IdentifiedModifier<Identifier> : SwiftUICore.ViewModifier, Swift.Equatable where Identifier : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_IdentifiedModifier",
        "generics": [
            "Identifier"
        ],
        "conformances": [
            "ViewModifier",
            "Equatable "
        ],
        "conditions": {
            "Identifier": "Hashable"
        },
        "condition_relations": {
            "Identifier": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ToolbarTitleMenu<Content> : SwiftUI.ToolbarContent, SwiftUI.CustomizableToolbarContent where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, tvOS 16.0, *)"
        ],
        "name": "ToolbarTitleMenu",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ToolbarContent",
            "CustomizableToolbarContent "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct ScrollViewReader<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ScrollViewReader",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct ScrollViewProxy {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ScrollViewProxy",
        "conformances": []
    },
    {
        "struct": "public struct NavigationLinkPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "NavigationLinkPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct _AccessibilityQuickActionStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AccessibilityQuickActionStyle",
        "conformances": []
    },
    {
        "struct": "public struct AccessibilityQuickActionPromptStyle : SwiftUI.AccessibilityQuickActionStyle {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "AccessibilityQuickActionPromptStyle",
        "conformances": [
            "AccessibilityQuickActionStyle "
        ]
    },
    {
        "struct": "public struct AccessibilityQuickActionOutlineStyle : SwiftUI.AccessibilityQuickActionStyle {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "AccessibilityQuickActionOutlineStyle",
        "conformances": [
            "AccessibilityQuickActionStyle "
        ]
    },
    {
        "struct": "public struct KeyPress : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "KeyPress",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Gauge<Label, CurrentValueLabel, BoundsLabel, MarkedValueLabels> : SwiftUICore.View where Label : SwiftUICore.View, CurrentValueLabel : SwiftUICore.View, BoundsLabel : SwiftUICore.View, MarkedValueLabels : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 7.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "Gauge",
        "generics": [
            "Label",
            "CurrentValueLabel",
            "BoundsLabel",
            "MarkedValueLabels"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View",
            "CurrentValueLabel": "View",
            "BoundsLabel": "View",
            "MarkedValueLabels": "View"
        },
        "condition_relations": {
            "Label": ":",
            "CurrentValueLabel": ":",
            "BoundsLabel": ":",
            "MarkedValueLabels": ":"
        }
    },
    {
        "struct": "public struct UnifiedWindowToolbarStyle : SwiftUI.WindowToolbarStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "UnifiedWindowToolbarStyle",
        "conformances": [
            "WindowToolbarStyle "
        ]
    },
    {
        "struct": "public struct SnapshotResponse : Swift.Sendable {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "SnapshotResponse",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct SnapshotData : Swift.Sendable {",
        "availabilities": [
            "@available(watchOS 9.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "SnapshotData",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _HiddenModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_HiddenModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DatePicker<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 10.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DatePicker",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct DatePickerComponents : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 10.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DatePickerComponents",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct SearchPresentationToolbarBehavior {",
        "availabilities": [
            "@available(iOS 17.1, macOS 14.1, tvOS 17.1, watchOS 10.1, *)"
        ],
        "name": "SearchPresentationToolbarBehavior",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CompactDatePickerStyle : SwiftUI.DatePickerStyle {",
        "availabilities": [
            "@available(iOS 14.0, macCatalyst 13.4, macOS 10.15.4, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CompactDatePickerStyle",
        "conformances": [
            "DatePickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _OverlayLayout : SwiftUICore._VariadicView.UnaryViewRoot, SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_OverlayLayout",
        "conformances": [
            "_VariadicView",
            "Animatable "
        ]
    },
    {
        "struct": "public struct TextSelection : Swift.Equatable, Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TextSelection",
        "conformances": [
            "Equatable",
            "Hashable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct TupleTableColumnContent<RowValue, Sort, T> : SwiftUI.TableColumnContent where RowValue : Swift.Identifiable, Sort : Foundation.SortComparator {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TupleTableColumnContent",
        "generics": [
            "RowValue",
            "Sort",
            "T"
        ],
        "conformances": [
            "TableColumnContent "
        ],
        "conditions": {
            "RowValue": "Identifiable",
            "Sort": "SortComparator"
        },
        "condition_relations": {
            "RowValue": ":",
            "Sort": ":"
        }
    },
    {
        "struct": "@propertyWrapper public struct FocusedValue<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "FocusedValue",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "@propertyWrapper public struct FocusedBinding<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "FocusedBinding",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "public struct FocusedValues {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "FocusedValues",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Subview : SwiftUICore.View, Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "Subview",
        "conformances": [
            "View",
            "Identifiable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GroupedTabViewStyle : SwiftUI.TabViewStyle {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "GroupedTabViewStyle",
        "conformances": [
            "TabViewStyle "
        ]
    },
    {
        "struct": "public struct TableStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TableStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct GaugeStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 7.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "GaugeStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Stepper<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "Stepper",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ShadowView<Content> : SwiftUICore.View where Content : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ShadowView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "Shape"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct FetchedResults<Result> : Swift.RandomAccessCollection where Result : CoreData.NSFetchRequestResult {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "FetchedResults",
        "generics": [
            "Result"
        ],
        "conformances": [
            "RandomAccessCollection "
        ],
        "conditions": {
            "Result": "NSFetchRequestResult"
        },
        "condition_relations": {
            "Result": ":"
        }
    },
    {
        "struct": "@propertyWrapper @preconcurrency @_Concurrency.MainActor public struct FetchRequest<Result> where Result : CoreData.NSFetchRequestResult {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "FetchRequest",
        "generics": [
            "Result"
        ],
        "conformances": [],
        "conditions": {
            "Result": "NSFetchRequestResult"
        },
        "condition_relations": {
            "Result": ":"
        }
    },
    {
        "struct": "public struct TabViewCustomization : Swift.Equatable, Swift.Sendable, Swift.Codable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, visionOS 2.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TabViewCustomization",
        "conformances": [
            "Equatable",
            "Sendable",
            "Codable "
        ]
    },
    {
        "struct": "public struct ToolbarTitleDisplayMode {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ToolbarTitleDisplayMode",
        "conformances": []
    },
    {
        "struct": "public struct ControlGroupStyleConfiguration {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ControlGroupStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EmptyControlWidgetTemplate {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "EmptyControlWidgetTemplate",
        "conformances": []
    },
    {
        "struct": "public struct KeyboardShortcut : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "KeyboardShortcut",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct KeyEquivalent : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "KeyEquivalent",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NavigationSplitView<Sidebar, Content, Detail> : SwiftUICore.View where Sidebar : SwiftUICore.View, Content : SwiftUICore.View, Detail : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "NavigationSplitView",
        "generics": [
            "Sidebar",
            "Content",
            "Detail"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Sidebar": "View",
            "Content": "View",
            "Detail": "View"
        },
        "condition_relations": {
            "Sidebar": ":",
            "Content": ":",
            "Detail": ":"
        }
    },
    {
        "struct": "public struct NavigationSplitViewVisibility : Swift.Equatable, Swift.Codable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "NavigationSplitViewVisibility",
        "conformances": [
            "Equatable",
            "Codable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct HoverEffectGroup : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "HoverEffectGroup",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct EditButton : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "EditButton",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@frozen public struct _IgnoredByLayoutEffect<Base> : SwiftUICore.GeometryEffect where Base : SwiftUICore.GeometryEffect {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_IgnoredByLayoutEffect",
        "generics": [
            "Base"
        ],
        "conformances": [
            "GeometryEffect "
        ],
        "conditions": {
            "Base": "GeometryEffect"
        },
        "condition_relations": {
            "Base": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LinearGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(watchOS 7.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "LinearGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _EmptyScene : SwiftUI.Scene {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_EmptyScene",
        "conformances": [
            "Scene "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct CommandGroup<Content> : SwiftUI.Commands where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CommandGroup",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Commands "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct CommandGroupPlacement {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "CommandGroupPlacement",
        "conformances": []
    },
    {
        "struct": "public struct SquareBorderTextFieldStyle : SwiftUI.TextFieldStyle {",
        "availabilities": [
            "@available(macOS 10.15, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "SquareBorderTextFieldStyle",
        "conformances": [
            "TextFieldStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct NavigationView<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"use NavigationStack or NavigationSplitView instead\")",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"use NavigationStack or NavigationSplitView instead\")",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"use NavigationStack or NavigationSplitView instead\")",
            "@available(watchOS, introduced: 7.0, deprecated: 100000.0, message: \"use NavigationStack or NavigationSplitView instead\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"use NavigationStack or NavigationSplitView instead\")"
        ],
        "name": "NavigationView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct PageIndexViewStyle : SwiftUI.IndexViewStyle {",
        "availabilities": [
            "@available(iOS 14.0, tvOS 14.0, watchOS 8.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "PageIndexViewStyle",
        "conformances": [
            "IndexViewStyle "
        ]
    },
    {
        "struct": "@propertyWrapper @frozen public struct AccessibilityFocusState<Value> : SwiftUICore.DynamicProperty where Value : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityFocusState",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "Value": "Hashable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct ToolbarLabelStyle : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ToolbarLabelStyle",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderedProminentButtonStyle : SwiftUI.PrimitiveButtonStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "BorderedProminentButtonStyle",
        "conformances": [
            "PrimitiveButtonStyle "
        ]
    },
    {
        "struct": "public struct PointerStyle : Swift.Sendable {",
        "availabilities": [
            "@available(macOS 15.0, visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PointerStyle",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct GroupBoxStyleConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "GroupBoxStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct TabPlacement : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TabPlacement",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "@_functionBuilder public struct WidgetBundleBuilder {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "WidgetBundleBuilder",
        "conformances": []
    },
    {
        "struct": "public struct PresentationDetent : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "PresentationDetent",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct PresentationAdaptation : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "PresentationAdaptation",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct PresentationContentInteraction : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "PresentationContentInteraction",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct PresentationBackgroundInteraction : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4, *)"
        ],
        "name": "PresentationBackgroundInteraction",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BorderedTableStyle : SwiftUI.TableStyle {",
        "availabilities": [
            "@available(macOS 12.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "BorderedTableStyle",
        "conformances": [
            "TableStyle "
        ]
    },
    {
        "struct": "public struct ButtonRepeatBehavior : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ButtonRepeatBehavior",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ButtonGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ButtonGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "public struct UIGestureRecognizerRepresentableContext<Representable> where Representable : SwiftUI.UIGestureRecognizerRepresentable {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "UIGestureRecognizerRepresentableContext",
        "generics": [
            "Representable"
        ],
        "conformances": [],
        "conditions": {
            "Representable": "UIGestureRecognizerRepresentable"
        },
        "condition_relations": {
            "Representable": ":"
        }
    },
    {
        "struct": "public struct UIGestureRecognizerRepresentableCoordinateSpaceConverter {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "UIGestureRecognizerRepresentableCoordinateSpaceConverter",
        "conformances": []
    },
    {
        "struct": "public struct _MenuButtonStyleConfiguration {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use `MenuStyle.Configuration` instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_MenuButtonStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct NavigationSplitViewColumn : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "NavigationSplitViewColumn",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PasteButton : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "PasteButton",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DocumentGroup<Document, Content> : SwiftUI.Scene where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DocumentGroup",
        "generics": [
            "Document",
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct UIViewRepresentableContext<Representable> where Representable : SwiftUI.UIViewRepresentable {",
        "availabilities": [
            "@available(iOS 13.0, tvOS 13.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "UIViewRepresentableContext",
        "generics": [
            "Representable"
        ],
        "conformances": [],
        "conditions": {
            "Representable": "UIViewRepresentable"
        },
        "condition_relations": {
            "Representable": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct TupleTableRowContent<Value, T> : SwiftUI.TableRowContent where Value : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "TupleTableRowContent",
        "generics": [
            "Value",
            "T"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Value": "Identifiable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TitleOnlyLabelStyle : SwiftUI.LabelStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "TitleOnlyLabelStyle",
        "conformances": [
            "LabelStyle "
        ]
    },
    {
        "struct": "public struct FocusInteractions : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "FocusInteractions",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _FocusableModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.4, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_FocusableModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct TimelineView<Schedule, Content> where Schedule : SwiftUICore.TimelineSchedule {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "TimelineView",
        "generics": [
            "Schedule",
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Schedule": "TimelineSchedule"
        },
        "condition_relations": {
            "Schedule": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 7.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DefaultGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Button<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Button",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct AccessibilityChildBehavior : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AccessibilityChildBehavior",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "public struct PopUpButtonPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS, unavailable)",
            "@available(macOS, introduced: 10.15, deprecated: 100000.0, message: \"Use the `menu` style instead.\")",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "PopUpButtonPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "public struct ToolbarRole : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ToolbarRole",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ContainerValueWritingModifier<Value> {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ContainerValueWritingModifier",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DocumentLaunchView<Actions, DocumentView> : SwiftUICore.View where Actions : SwiftUICore.View, DocumentView : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(macCatalyst, unavailable)",
            "@available(visionOS, unavailable)",
            "@available(macCatalyst, unavailable)"
        ],
        "name": "DocumentLaunchView",
        "generics": [
            "Actions",
            "DocumentView"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Actions": "View",
            "DocumentView": "View"
        },
        "condition_relations": {
            "Actions": ":",
            "DocumentView": ":"
        }
    },
    {
        "struct": "public struct DocumentLaunchGeometryProxy {",
        "availabilities": [
            "@available(iOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DocumentLaunchGeometryProxy",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DefaultDocumentGroupLaunchActions : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, visionOS 2.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DefaultDocumentGroupLaunchActions",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct GridItem : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "GridItem",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LazyHGrid<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LazyHGrid",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct LazyVGrid<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LazyVGrid",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct DismissWindowAction {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DismissWindowAction",
        "conformances": []
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct SectionedFetchResults<SectionIdentifier, Result> : Swift.RandomAccessCollection where SectionIdentifier : Swift.Hashable, Result : CoreData.NSFetchRequestResult {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SectionedFetchResults",
        "generics": [
            "SectionIdentifier",
            "Result"
        ],
        "conformances": [
            "RandomAccessCollection "
        ],
        "conditions": {
            "SectionIdentifier": "Hashable",
            "Result": "NSFetchRequestResult"
        },
        "condition_relations": {
            "SectionIdentifier": ":",
            "Result": ":"
        }
    },
    {
        "struct": "@propertyWrapper @_Concurrency.MainActor @preconcurrency public struct SectionedFetchRequest<SectionIdentifier, Result> where SectionIdentifier : Swift.Hashable, Result : CoreData.NSFetchRequestResult {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SectionedFetchRequest",
        "generics": [
            "SectionIdentifier",
            "Result"
        ],
        "conformances": [],
        "conditions": {
            "SectionIdentifier": "Hashable",
            "Result": "NSFetchRequestResult"
        },
        "condition_relations": {
            "SectionIdentifier": ":",
            "Result": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _WKStoryboardContent : SwiftUICore.View {",
        "availabilities": [
            "@available(watchOS 6.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "_WKStoryboardContent",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct SearchSuggestionsPlacement : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "SearchSuggestionsPlacement",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AutomaticFormStyle : SwiftUI.FormStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AutomaticFormStyle",
        "conformances": [
            "FormStyle "
        ]
    },
    {
        "struct": "public struct LabeledContentStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LabeledContentStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct ExpandedWindowToolbarStyle : SwiftUI.WindowToolbarStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "ExpandedWindowToolbarStyle",
        "conformances": [
            "WindowToolbarStyle "
        ]
    },
    {
        "struct": "public struct UIHostingControllerSizingOptions : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, tvOS 16.0, *)",
            "@available(macOS, unavailable)"
        ],
        "name": "UIHostingControllerSizingOptions",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "public struct WindowBackgroundShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowBackgroundShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct MenuPickerStyle : SwiftUI.PickerStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "MenuPickerStyle",
        "conformances": [
            "PickerStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SpatialTapGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, visionOS 1.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "SpatialTapGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct WindowDragGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(macOS 15.0, *)",
            "@available(iOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "WindowDragGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct RenameButton<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "RenameButton",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "public struct RenameAction {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "RenameAction",
        "conformances": []
    },
    {
        "struct": "public struct StackNavigationViewStyle : SwiftUI.NavigationViewStyle {",
        "availabilities": [
            "@available(iOS, introduced: 13.0, deprecated: 100000.0, message: \"replace stack-styled NavigationView with NavigationStack\")",
            "@available(macOS, unavailable)",
            "@available(tvOS, introduced: 13.0, deprecated: 100000.0, message: \"replace stack-styled NavigationView with NavigationStack\")",
            "@available(watchOS, introduced: 7.0, deprecated: 100000.0, message: \"replace stack-styled NavigationView with NavigationStack\")",
            "@available(visionOS, introduced: 1.0, deprecated: 100000.0, message: \"replace stack-styled NavigationView with NavigationStack\")"
        ],
        "name": "StackNavigationViewStyle",
        "conformances": [
            "NavigationViewStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Label<Title, Icon> : SwiftUICore.View where Title : SwiftUICore.View, Icon : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "Label",
        "generics": [
            "Title",
            "Icon"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Title": "View",
            "Icon": "View"
        },
        "condition_relations": {
            "Title": ":",
            "Icon": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DisclosureTableRow<Label, Content> : SwiftUI.TableRowContent where Label : SwiftUI.TableRowContent, Content : SwiftUI.TableRowContent, Label.TableRowValue == Content.TableRowValue {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DisclosureTableRow",
        "generics": [
            "Label",
            "Content"
        ],
        "conformances": [
            "TableRowContent "
        ],
        "conditions": {
            "Label": "TableRowContent",
            "Content": "TableRowContent"
        },
        "condition_relations": {
            "Label": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct BadgeProminence : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, *)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "BadgeProminence",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct AccessibilityZoomGestureAction {",
        "availabilities": [
            "@available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AccessibilityZoomGestureAction",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SwitchToggleStyle : SwiftUI.ToggleStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 18.0, watchOS 6.0, *)"
        ],
        "name": "SwitchToggleStyle",
        "conformances": [
            "ToggleStyle "
        ]
    },
    {
        "struct": "public struct AdaptableTabBarPlacement : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "AdaptableTabBarPlacement",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ColorPicker<Label> : SwiftUICore.View where Label : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ColorPicker",
        "generics": [
            "Label"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Label": "View"
        },
        "condition_relations": {
            "Label": ":"
        }
    },
    {
        "struct": "@frozen @propertyWrapper @preconcurrency @_Concurrency.MainActor public struct FocusedObject<ObjectType> : SwiftUICore.DynamicProperty where ObjectType : Combine.ObservableObject {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "FocusedObject",
        "generics": [
            "ObjectType"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "ObjectType": "ObservableObject"
        },
        "condition_relations": {
            "ObjectType": ":"
        }
    },
    {
        "struct": "public struct ToolbarPlacement {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ToolbarPlacement",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct DocumentGroupLaunchScene<Actions> : SwiftUI.Scene where Actions : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DocumentGroupLaunchScene",
        "generics": [
            "Actions"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Actions": "View"
        },
        "condition_relations": {
            "Actions": ":"
        }
    },
    {
        "struct": "public struct AccessibilityActionKind : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AccessibilityActionKind",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct GroupSectionsOfContent<Sections, Content> : SwiftUICore.View where Sections : SwiftUICore.View, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "GroupSectionsOfContent",
        "generics": [
            "Sections",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Sections": "View",
            "Content": "View"
        },
        "condition_relations": {
            "Sections": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct SectionCollection : Swift.RandomAccessCollection {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SectionCollection",
        "conformances": [
            "RandomAccessCollection "
        ]
    },
    {
        "struct": "public struct SectionConfiguration : Swift.Identifiable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SectionConfiguration",
        "conformances": [
            "Identifiable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DisclosureIndicator : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_DisclosureIndicator",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SpatialEventGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(visionOS 1.0, iOS 18.0, macOS 15.0, watchOS 11.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "SpatialEventGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "public struct _ScrollableLayoutProxy : Swift.RandomAccessCollection {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollableLayoutProxy",
        "conformances": [
            "RandomAccessCollection "
        ]
    },
    {
        "struct": "public struct _ScrollableLayoutItem : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollableLayoutItem",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct LabelStyleConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "LabelStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct UnifiedCompactWindowToolbarStyle : SwiftUI.WindowToolbarStyle {",
        "availabilities": [
            "@available(macOS 11.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "UnifiedCompactWindowToolbarStyle",
        "conformances": [
            "WindowToolbarStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DraggingModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.4, macOS 10.15, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_DraggingModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct _ScrollViewProxy : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollViewProxy",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct _ContainedScrollViewKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ContainedScrollViewKey",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AccessoryCircularGaugeStyle : SwiftUI.GaugeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 9.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "AccessoryCircularGaugeStyle",
        "conformances": [
            "GaugeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Window<Content> : SwiftUI.Scene where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(macOS 13.0, *)",
            "@available(iOS, unavailable)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(visionOS, unavailable)"
        ],
        "name": "Window",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Scene "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct DatePickerStyleConfiguration {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, watchOS 10.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "DatePickerStyleConfiguration",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DatePickerStyleLabel : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, watchOS 10.0, *)",
            "@available(tvOS, unavailable)"
        ],
        "name": "_DatePickerStyleLabel",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct _ViewInputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ViewInputs",
        "conformances": []
    },
    {
        "struct": "@frozen public struct EventModifiers : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EventModifiers",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "public struct ScrollGeometry : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollGeometry",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ScrollLayout : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScrollLayout",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct ZStack<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ZStack",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ZStackLayout : SwiftUICore._VariadicView.UnaryViewRoot, SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ZStackLayout",
        "conformances": [
            "_VariadicView",
            "Animatable "
        ]
    },
    {
        "struct": "@frozen public struct ZStackLayout : SwiftUICore.Layout {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ZStackLayout",
        "conformances": [
            "Layout "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct LinearGradient : SwiftUICore.ShapeStyle, SwiftUICore.View, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "LinearGradient",
        "conformances": [
            "ShapeStyle",
            "View",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct RadialGradient : SwiftUICore.ShapeStyle, SwiftUICore.View, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "RadialGradient",
        "conformances": [
            "ShapeStyle",
            "View",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EllipticalGradient : SwiftUICore.ShapeStyle, SwiftUICore.View, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "EllipticalGradient",
        "conformances": [
            "ShapeStyle",
            "View",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct AngularGradient : SwiftUICore.ShapeStyle, SwiftUICore.View, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AngularGradient",
        "conformances": [
            "ShapeStyle",
            "View",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ScrollPosition : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "ScrollPosition",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct ScrollTarget {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ScrollTarget",
        "conformances": []
    },
    {
        "struct": "@frozen public struct _OffsetEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_OffsetEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct OffsetTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "OffsetTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "@frozen public struct _AnyAnimatableData : SwiftUICore.VectorArithmetic {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AnyAnimatableData",
        "conformances": [
            "VectorArithmetic "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ColorMonochromeEffect : SwiftUICore.EnvironmentalModifier {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ColorMonochromeEffect",
        "conformances": [
            "EnvironmentalModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct SimultaneousGesture<First, Second> : SwiftUICore.Gesture where First : SwiftUICore.Gesture, Second : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "SimultaneousGesture",
        "generics": [
            "First",
            "Second"
        ],
        "conformances": [
            "Gesture "
        ],
        "conditions": {
            "First": "Gesture",
            "Second": "Gesture"
        },
        "condition_relations": {
            "First": ":",
            "Second": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct VStack<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "VStack",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct _VStackLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_VStackLayout",
        "conformances": []
    },
    {
        "struct": "@frozen public struct VStackLayout : SwiftUICore.Layout {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "VStackLayout",
        "conformances": [
            "Layout "
        ]
    },
    {
        "struct": "public struct ViewDimensions {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ViewDimensions",
        "conformances": []
    },
    {
        "struct": "@frozen public struct _FixedSizeLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_FixedSizeLayout",
        "conformances": []
    },
    {
        "struct": "public struct EmptyHoverEffect : SwiftUICore.CustomHoverEffect {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "EmptyHoverEffect",
        "conformances": [
            "CustomHoverEffect "
        ]
    },
    {
        "struct": "public struct _CustomHoverEffectInputs {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_CustomHoverEffectInputs",
        "conformances": []
    },
    {
        "struct": "public struct _CustomHoverEffectOutputs {",
        "availabilities": [
            "@available(iOS 18.0, tvOS 18.0, visionOS 2.0, *)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_CustomHoverEffectOutputs",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct ExclusiveGesture<First, Second> : SwiftUICore.Gesture where First : SwiftUICore.Gesture, Second : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ExclusiveGesture",
        "generics": [
            "First",
            "Second"
        ],
        "conformances": [
            "Gesture "
        ],
        "conditions": {
            "First": "Gesture",
            "Second": "Gesture"
        },
        "condition_relations": {
            "First": ":",
            "Second": ":"
        }
    },
    {
        "struct": "@frozen public struct _RotationEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_RotationEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct AnyGradient : Swift.Hashable, SwiftUICore.ShapeStyle, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AnyGradient",
        "conformances": [
            "Hashable",
            "ShapeStyle",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct _AnyLinearGradient : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AnyLinearGradient",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen public struct _AnyRadialGradient : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AnyRadialGradient",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen public struct _AnyEllipticalGradient : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AnyEllipticalGradient",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen public struct _AnyAngularGradient : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_AnyAngularGradient",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ViewModifier_Content<Modifier> : SwiftUICore.View where Modifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ViewModifier_Content",
        "generics": [
            "Modifier"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Modifier": "ViewModifier"
        },
        "condition_relations": {
            "Modifier": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PlaceholderContentView<Value> : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "PlaceholderContentView",
        "generics": [
            "Value"
        ],
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct KeyframeTrack<Root, Value, Content> : SwiftUICore.Keyframes where Value == Content.Value, Content : SwiftUICore.KeyframeTrackContent {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "KeyframeTrack",
        "generics": [
            "Root",
            "Value",
            "Content"
        ],
        "conformances": [
            "Keyframes "
        ],
        "conditions": {
            "Content": "KeyframeTrackContent"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundColorModifier {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)",
            "@available(*, deprecated, message: \"will be removed\")"
        ],
        "name": "_ForegroundColorModifier",
        "conformances": []
    },
    {
        "struct": "@frozen @propertyWrapper public struct Namespace : SwiftUICore.DynamicProperty, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "Namespace",
        "conformances": [
            "DynamicProperty",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct ImagePaint : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ImagePaint",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct PeriodicTimelineSchedule : SwiftUICore.TimelineSchedule, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "PeriodicTimelineSchedule",
        "conformances": [
            "TimelineSchedule",
            "Sendable "
        ]
    },
    {
        "struct": "public struct EveryMinuteTimelineSchedule : SwiftUICore.TimelineSchedule, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "EveryMinuteTimelineSchedule",
        "conformances": [
            "TimelineSchedule",
            "Sendable "
        ]
    },
    {
        "struct": "public struct ExplicitTimelineSchedule<Entries> : SwiftUICore.TimelineSchedule where Entries : Swift.Sequence, Entries.Element == Foundation.Date {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "ExplicitTimelineSchedule",
        "generics": [
            "Entries"
        ],
        "conformances": [
            "TimelineSchedule "
        ],
        "conditions": {
            "Entries": "Sequence"
        },
        "condition_relations": {
            "Entries": ":"
        }
    },
    {
        "struct": "@frozen public struct Gradient : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Gradient",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct _TextVariantPreference<Preference> : Swift.Sendable where Preference : SwiftUICore.TextVariantPreference {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_TextVariantPreference",
        "generics": [
            "Preference"
        ],
        "conformances": [
            "Sendable "
        ],
        "conditions": {
            "Preference": "TextVariantPreference"
        },
        "condition_relations": {
            "Preference": ":"
        }
    },
    {
        "struct": "public struct FixedTextVariant : SwiftUICore.TextVariantPreference, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "FixedTextVariant",
        "conformances": [
            "TextVariantPreference",
            "Sendable "
        ]
    },
    {
        "struct": "public struct SizeDependentTextVariant : SwiftUICore.TextVariantPreference, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "SizeDependentTextVariant",
        "conformances": [
            "TextVariantPreference",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct KeyframeAnimator<Value, KeyframePath, Content> : SwiftUICore.View where Value == KeyframePath.Value, KeyframePath : SwiftUICore.Keyframes, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "KeyframeAnimator",
        "generics": [
            "Value",
            "KeyframePath",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "KeyframePath": "Keyframes",
            "Content": "View"
        },
        "condition_relations": {
            "KeyframePath": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PaddingLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PaddingLayout",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct TupleView<T> : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "TupleView",
        "generics": [
            "T"
        ],
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BlendModeEffect : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_BlendModeEffect",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _Placement : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_Placement",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ColorMatrixEffect {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ColorMatrixEffect",
        "conformances": []
    },
    {
        "struct": "@frozen public struct Group<Content> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Group",
        "generics": [
            "Content"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ContrastEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ContrastEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct UnitCurve {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "UnitCurve",
        "conformances": []
    },
    {
        "struct": "@frozen public struct MatchedGeometryProperties : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "MatchedGeometryProperties",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _MatchedGeometryEffect<ID> where ID : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_MatchedGeometryEffect",
        "generics": [
            "ID"
        ],
        "conformances": [],
        "conditions": {
            "ID": "Hashable"
        },
        "condition_relations": {
            "ID": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _EnvironmentKeyWritingModifier<Value> : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EnvironmentKeyWritingModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "@preconcurrency @_Concurrency.MainActor public struct OpenURLAction {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "OpenURLAction",
        "conformances": []
    },
    {
        "struct": "public struct Spring : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "Spring",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _OverlayModifier<Overlay> : SwiftUICore.ViewModifier where Overlay : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_OverlayModifier",
        "generics": [
            "Overlay"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Overlay": "View"
        },
        "condition_relations": {
            "Overlay": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _OverlayStyleModifier<Style> : SwiftUICore.ViewModifier where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_OverlayStyleModifier",
        "generics": [
            "Style"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _OverlayShapeModifier<Style, Bounds> : SwiftUICore.ViewModifier where Style : SwiftUICore.ShapeStyle, Bounds : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_OverlayShapeModifier",
        "generics": [
            "Style",
            "Bounds"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Style": "ShapeStyle",
            "Bounds": "Shape"
        },
        "condition_relations": {
            "Style": ":",
            "Bounds": ":"
        }
    },
    {
        "struct": "@frozen public struct Font : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Font",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ProposedSize {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ProposedSize",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct Spacer {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Spacer",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TextBaselineRelativeSpacer {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_TextBaselineRelativeSpacer",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _HSpacer {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_HSpacer",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _VSpacer {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_VSpacer",
        "conformances": []
    },
    {
        "struct": "@_functionBuilder public struct KeyframesBuilder<Value> {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "KeyframesBuilder",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MoveTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "MoveTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "public struct _StackLayoutCache {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_StackLayoutCache",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BlurEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_BlurEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct AccessibilityTextContentType : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityTextContentType",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ColorInvertEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ColorInvertEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TraitWritingModifier<Trait> where Trait : SwiftUICore._ViewTraitKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TraitWritingModifier",
        "generics": [
            "Trait"
        ],
        "conformances": [],
        "conditions": {
            "Trait": "_ViewTraitKey"
        },
        "condition_relations": {
            "Trait": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ConditionalTraitWritingModifier<Trait> where Trait : SwiftUICore._ViewTraitKey {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ConditionalTraitWritingModifier",
        "generics": [
            "Trait"
        ],
        "conformances": [],
        "conditions": {
            "Trait": "_ViewTraitKey"
        },
        "condition_relations": {
            "Trait": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundLayerViewModifier {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ForegroundLayerViewModifier",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundLayerColorMatrixEffect {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ForegroundLayerColorMatrixEffect",
        "conformances": []
    },
    {
        "struct": "public struct ContentShapeKinds : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "ContentShapeKinds",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GrayscaleEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_GrayscaleEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct Anchor<Value> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Anchor",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen public struct _Rotation3DEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_Rotation3DEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "public struct EmptyHoverEffectContent : SwiftUICore.HoverEffectContent {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "EmptyHoverEffectContent",
        "conformances": [
            "HoverEffectContent "
        ]
    },
    {
        "struct": "public struct _HoverEffectContentInputs {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "_HoverEffectContentInputs",
        "conformances": []
    },
    {
        "struct": "public struct _HoverEffectContentOutputs {",
        "availabilities": [
            "@available(visionOS 2.0, *)",
            "@available(iOS, unavailable)",
            "@available(macOS, unavailable)",
            "@available(watchOS, unavailable)",
            "@available(tvOS, unavailable)"
        ],
        "name": "_HoverEffectContentOutputs",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _OpacityEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_OpacityEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct _OpacityShapeStyle<Style> : SwiftUICore.ShapeStyle where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_OpacityShapeStyle",
        "generics": [
            "Style"
        ],
        "conformances": [
            "ShapeStyle "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct OpacityTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "OpacityTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ShadowEffect : SwiftUICore.EnvironmentalModifier, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ShadowEffect",
        "conformances": [
            "EnvironmentalModifier",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DrawingGroupEffect : SwiftUICore.ViewModifier, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DrawingGroupEffect",
        "conformances": [
            "ViewModifier",
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BrightnessEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_BrightnessEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _GeometryGroupEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_GeometryGroupEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct AsymmetricTransition<Insertion, Removal> : SwiftUICore.Transition where Insertion : SwiftUICore.Transition, Removal : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "AsymmetricTransition",
        "generics": [
            "Insertion",
            "Removal"
        ],
        "conformances": [
            "Transition "
        ],
        "conditions": {
            "Insertion": "Transition",
            "Removal": "Transition"
        },
        "condition_relations": {
            "Insertion": ":",
            "Removal": ":"
        }
    },
    {
        "struct": "@_functionBuilder public struct ViewBuilder {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ViewBuilder",
        "conformances": []
    },
    {
        "struct": "@frozen @propertyWrapper @preconcurrency @_Concurrency.MainActor public struct EnvironmentObject<ObjectType> : SwiftUICore.DynamicProperty where ObjectType : Combine.ObservableObject {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EnvironmentObject",
        "generics": [
            "ObjectType"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "ObjectType": "ObservableObject"
        },
        "condition_relations": {
            "ObjectType": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _MaskAlignmentEffect<Mask> : SwiftUICore.ViewModifier where Mask : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_MaskAlignmentEffect",
        "generics": [
            "Mask"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Mask": "View"
        },
        "condition_relations": {
            "Mask": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _MaskEffect<Mask> : SwiftUICore.ViewModifier where Mask : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_MaskEffect",
        "generics": [
            "Mask"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Mask": "View"
        },
        "condition_relations": {
            "Mask": ":"
        }
    },
    {
        "struct": "public struct AccessibilityTraits : Swift.SetAlgebra, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AccessibilityTraits",
        "conformances": [
            "SetAlgebra",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct LocalizedStringKey : Swift.Equatable, Swift.ExpressibleByStringInterpolation {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "LocalizedStringKey",
        "conformances": [
            "Equatable",
            "ExpressibleByStringInterpolation "
        ]
    },
    {
        "struct": "public struct EnabledTextSelectability : SwiftUICore.TextSelectability {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "EnabledTextSelectability",
        "conformances": [
            "TextSelectability "
        ]
    },
    {
        "struct": "public struct DisabledTextSelectability : SwiftUICore.TextSelectability {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, *)",
            "@available(tvOS, unavailable)",
            "@available(watchOS, unavailable)"
        ],
        "name": "DisabledTextSelectability",
        "conformances": [
            "TextSelectability "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct HStack<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "HStack",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct _HStackLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_HStackLayout",
        "conformances": []
    },
    {
        "struct": "@frozen public struct HStackLayout : SwiftUICore.Layout {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "HStackLayout",
        "conformances": [
            "Layout "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _CompositingGroupEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_CompositingGroupEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct _ResolvedKeyframes<Value> {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ResolvedKeyframes",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen public struct AnyShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AnyShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PreferenceReadingView<Key, Content> : SwiftUICore.View where Key : SwiftUICore.PreferenceKey, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PreferenceReadingView",
        "generics": [
            "Key",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Key": "PreferenceKey",
            "Content": "View"
        },
        "condition_relations": {
            "Key": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct AccessibilityCustomContentKey {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "AccessibilityCustomContentKey",
        "conformances": []
    },
    {
        "struct": "@frozen public struct _TrimmedShape<S> : SwiftUICore.Shape where S : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TrimmedShape",
        "generics": [
            "S"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "S": "Shape"
        },
        "condition_relations": {
            "S": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _EndedGesture<Content> where Content : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EndedGesture",
        "generics": [
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Content": "Gesture"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ChangedGesture<Content> where Content : SwiftUICore.Gesture, Content.Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ChangedGesture",
        "generics": [
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Content": "Gesture",
            "Content.Value": "Equatable"
        },
        "condition_relations": {
            "Content": ":",
            "Content.Value": ":"
        }
    },
    {
        "struct": "public struct _DynamicPropertyBuffer {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DynamicPropertyBuffer",
        "conformances": []
    },
    {
        "struct": "public struct _Graph {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_Graph",
        "conformances": []
    },
    {
        "struct": "public struct _GraphValue<Value> : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_GraphValue",
        "generics": [
            "Value"
        ],
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct Transaction {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Transaction",
        "conformances": []
    },
    {
        "struct": "public struct RedactionReasons : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "RedactionReasons",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct FillStyle : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "FillStyle",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct _BlendModeShapeStyle<Style> : SwiftUICore.ShapeStyle where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_BlendModeShapeStyle",
        "generics": [
            "Style"
        ],
        "conformances": [
            "ShapeStyle "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "public struct Material : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "Material",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct MaterialActiveAppearance : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "MaterialActiveAppearance",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct _VariadicView_Children {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_VariadicView_Children",
        "conformances": []
    },
    {
        "struct": "@frozen public struct HierarchicalShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "HierarchicalShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen public struct HierarchicalShapeStyleModifier<Base> : SwiftUICore.ShapeStyle where Base : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "HierarchicalShapeStyleModifier",
        "generics": [
            "Base"
        ],
        "conformances": [
            "ShapeStyle "
        ],
        "conditions": {
            "Base": "ShapeStyle"
        },
        "condition_relations": {
            "Base": ":"
        }
    },
    {
        "struct": "public struct SymbolRenderingMode : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SymbolRenderingMode",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@dynamicMemberLookup public struct ShaderLibrary : Swift.Equatable, @unchecked Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ShaderLibrary",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@dynamicCallable public struct ShaderFunction : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "ShaderFunction",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct Shader : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "Shader",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _ShaderFilterEffect : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, *)",
            "@available(watchOS, unavailable)"
        ],
        "name": "_ShaderFilterEffect",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct GraphicsContext {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "GraphicsContext",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AspectRatioLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AspectRatioLayout",
        "conformances": []
    },
    {
        "struct": "public struct SeparatorShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 17.0, macOS 10.15, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SeparatorShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct GeometryReader<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "GeometryReader",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct GeometryProxy {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "GeometryProxy",
        "conformances": []
    },
    {
        "struct": "@propertyWrapper @preconcurrency @_Concurrency.MainActor @frozen public struct ObservedObject<ObjectType> : SwiftUICore.DynamicProperty where ObjectType : Combine.ObservableObject {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ObservedObject",
        "generics": [
            "ObjectType"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "ObjectType": "ObservableObject"
        },
        "condition_relations": {
            "ObjectType": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _OverlayPreferenceModifier<Key, Overlay> where Key : SwiftUICore.PreferenceKey, Overlay : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_OverlayPreferenceModifier",
        "generics": [
            "Key",
            "Overlay"
        ],
        "conformances": [],
        "conditions": {
            "Key": "PreferenceKey",
            "Overlay": "View"
        },
        "condition_relations": {
            "Key": ":",
            "Overlay": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackgroundPreferenceModifier<Key, Overlay> where Key : SwiftUICore.PreferenceKey, Overlay : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_BackgroundPreferenceModifier",
        "generics": [
            "Key",
            "Overlay"
        ],
        "conformances": [],
        "conditions": {
            "Key": "PreferenceKey",
            "Overlay": "View"
        },
        "condition_relations": {
            "Key": ":",
            "Overlay": ":"
        }
    },
    {
        "struct": "@frozen public struct AnyLayout : SwiftUICore.Layout {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AnyLayout",
        "conformances": [
            "Layout "
        ]
    },
    {
        "struct": "public struct LayoutProperties : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LayoutProperties",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct ProposedViewSize : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ProposedViewSize",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct ViewSpacing : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ViewSpacing",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "public struct LayoutSubviews : Swift.Equatable, Swift.RandomAccessCollection, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LayoutSubviews",
        "conformances": [
            "Equatable",
            "RandomAccessCollection",
            "Sendable "
        ]
    },
    {
        "struct": "public struct LayoutSubview : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "LayoutSubview",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct _LayoutTrait<K> : SwiftUICore._ViewTraitKey where K : SwiftUICore.LayoutValueKey {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_LayoutTrait",
        "generics": [
            "K"
        ],
        "conformances": [
            "_ViewTraitKey "
        ],
        "conditions": {
            "K": "LayoutValueKey"
        },
        "condition_relations": {
            "K": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _LayoutRoot<L> : SwiftUICore._VariadicView.UnaryViewRoot where L : SwiftUICore.Layout {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_LayoutRoot",
        "generics": [
            "L"
        ],
        "conformances": [
            "_VariadicView"
        ],
        "conditions": {
            "L": "Layout"
        },
        "condition_relations": {
            "L": ":"
        }
    },
    {
        "struct": "public struct _IdentifiedViewProxy {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_IdentifiedViewProxy",
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct SlideTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SlideTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "public struct ShadowStyle : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ShadowStyle",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct _ShadowShapeStyle<Style> : SwiftUICore.ShapeStyle where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_ShadowShapeStyle",
        "generics": [
            "Style"
        ],
        "conformances": [
            "ShapeStyle "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@frozen public struct _AnchoredShapeStyle<S> : SwiftUICore.ShapeStyle where S : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AnchoredShapeStyle",
        "generics": [
            "S"
        ],
        "conformances": [
            "ShapeStyle "
        ],
        "conditions": {
            "S": "ShapeStyle"
        },
        "condition_relations": {
            "S": ":"
        }
    },
    {
        "struct": "@frozen public struct StrokeStyle : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "StrokeStyle",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "public struct TypesettingLanguage : Swift.Sendable, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "TypesettingLanguage",
        "conformances": [
            "Sendable",
            "Equatable "
        ]
    },
    {
        "struct": "public struct BackgroundProminence : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "BackgroundProminence",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _ViewListInputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ViewListInputs",
        "conformances": []
    },
    {
        "struct": "public struct _ViewListCountInputs {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ViewListCountInputs",
        "conformances": []
    },
    {
        "struct": "public struct _ViewListOutputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ViewListOutputs",
        "conformances": []
    },
    {
        "struct": "@frozen public struct BackgroundStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "BackgroundStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _EnvironmentBackgroundStyleModifier<S> where S : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_EnvironmentBackgroundStyleModifier",
        "generics": [
            "S"
        ],
        "conformances": [],
        "conditions": {
            "S": "ShapeStyle"
        },
        "condition_relations": {
            "S": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundStyleModifier<Style> where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ForegroundStyleModifier",
        "generics": [
            "Style"
        ],
        "conformances": [],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundStyleModifier2<S1, S2> where S1 : SwiftUICore.ShapeStyle, S2 : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ForegroundStyleModifier2",
        "generics": [
            "S1",
            "S2"
        ],
        "conformances": [],
        "conditions": {
            "S1": "ShapeStyle",
            "S2": "ShapeStyle"
        },
        "condition_relations": {
            "S1": ":",
            "S2": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ForegroundStyleModifier3<S1, S2, S3> where S1 : SwiftUICore.ShapeStyle, S2 : SwiftUICore.ShapeStyle, S3 : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ForegroundStyleModifier3",
        "generics": [
            "S1",
            "S2",
            "S3"
        ],
        "conformances": [],
        "conditions": {
            "S1": "ShapeStyle",
            "S2": "ShapeStyle",
            "S3": "ShapeStyle"
        },
        "condition_relations": {
            "S1": ":",
            "S2": ":",
            "S3": ":"
        }
    },
    {
        "struct": "@frozen public struct ForegroundStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ForegroundStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen public struct _ImplicitShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "_ImplicitShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "public struct _ShapeStyle_Shape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ShapeStyle_Shape",
        "conformances": []
    },
    {
        "struct": "public struct _ShapeStyle_ShapeType {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ShapeStyle_ShapeType",
        "conformances": []
    },
    {
        "struct": "@frozen public struct _StrokedShape<S> : SwiftUICore.Shape where S : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_StrokedShape",
        "generics": [
            "S"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "S": "Shape"
        },
        "condition_relations": {
            "S": ":"
        }
    },
    {
        "struct": "@frozen public struct UnitPoint : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "UnitPoint",
        "conformances": [
            "Hashable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PreferenceTransformModifier<Key> : SwiftUICore.ViewModifier where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PreferenceTransformModifier",
        "generics": [
            "Key"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "public struct _ViewOutputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ViewOutputs",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PreferenceWritingModifier<Key> : SwiftUICore.ViewModifier where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PreferenceWritingModifier",
        "generics": [
            "Key"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _LuminanceToAlphaEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_LuminanceToAlphaEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct AnyShape : SwiftUICore.Shape, @unchecked Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "AnyShape",
        "conformances": [
            "Shape",
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _MapGesture<Content, Value> where Content : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_MapGesture",
        "generics": [
            "Content",
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Content": "Gesture"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct AnyGesture<Value> : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AnyGesture",
        "generics": [
            "Value"
        ],
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@frozen public struct Path : Swift.Equatable, Swift.LosslessStringConvertible, @unchecked Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Path",
        "conformances": [
            "Equatable",
            "LosslessStringConvertible",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct Rectangle : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Rectangle",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen public struct RoundedRectangle : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "RoundedRectangle",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen public struct UnevenRoundedRectangle : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "UnevenRoundedRectangle",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen public struct Capsule : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Capsule",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen public struct Ellipse : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Ellipse",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen public struct Circle : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Circle",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AlignmentLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AlignmentLayout",
        "conformances": []
    },
    {
        "struct": "@frozen public struct ProjectionTransform {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ProjectionTransform",
        "conformances": []
    },
    {
        "struct": "@frozen public struct EdgeInsets : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EdgeInsets",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AppearanceActionModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AppearanceActionModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "public struct _PreferenceValue<Key> where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PreferenceValue",
        "generics": [
            "Key"
        ],
        "conformances": [],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _DelayedPreferenceView<Key, Content> : SwiftUICore.View where Key : SwiftUICore.PreferenceKey, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DelayedPreferenceView",
        "generics": [
            "Key",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Key": "PreferenceKey",
            "Content": "View"
        },
        "condition_relations": {
            "Key": ":",
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _EnvironmentKeyTransformModifier<Value> : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EnvironmentKeyTransformModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "public struct _DetachableProperties : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DetachableProperties",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _DetachedView<Detached, Content, Child> : SwiftUICore.View where Detached : SwiftUICore._Detachable, Content : SwiftUICore.View, Child : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DetachedView",
        "generics": [
            "Detached",
            "Content",
            "Child"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Detached": "_Detachable",
            "Content": "View",
            "Child": "View"
        },
        "condition_relations": {
            "Detached": ":",
            "Content": ":",
            "Child": ":"
        }
    },
    {
        "struct": "public struct _DetachedKey<Key> : SwiftUICore._Detachable where Key : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DetachedKey",
        "generics": [
            "Key"
        ],
        "conformances": [
            "_Detachable "
        ],
        "conditions": {
            "Key": "PreferenceKey"
        },
        "condition_relations": {
            "Key": ":"
        }
    },
    {
        "struct": "public struct _EmptyDetached : SwiftUICore._Detachable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EmptyDetached",
        "conformances": [
            "_Detachable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct _DetachedPlaceholder<Detached> : SwiftUICore.View where Detached : SwiftUICore._Detachable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_DetachedPlaceholder",
        "generics": [
            "Detached"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Detached": "_Detachable"
        },
        "condition_relations": {
            "Detached": ":"
        }
    },
    {
        "struct": "@frozen public struct HorizontalAlignment : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "HorizontalAlignment",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct VerticalAlignment : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "VerticalAlignment",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct Alignment : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Alignment",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@_documentation(visibility: private) @frozen public struct AlignmentKey : Swift.Hashable, Swift.Comparable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AlignmentKey",
        "conformances": [
            "Hashable",
            "Comparable "
        ]
    },
    {
        "struct": "@frozen @propertyWrapper public struct Environment<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Environment",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PushTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "PushTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "@frozen @propertyWrapper @dynamicMemberLookup public struct Binding<Value> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Binding",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen public struct _Velocity<Value> : Swift.Equatable where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_Velocity",
        "generics": [
            "Value"
        ],
        "conformances": [
            "Equatable "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct EnvironmentValues : Swift.CustomStringConvertible {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EnvironmentValues",
        "conformances": [
            "CustomStringConvertible "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ScrollClipEffect<ClipShape> : SwiftUICore.ViewModifier, SwiftUICore.Animatable where ClipShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_ScrollClipEffect",
        "generics": [
            "ClipShape"
        ],
        "conformances": [
            "ViewModifier",
            "Animatable "
        ],
        "conditions": {
            "ClipShape": "Shape"
        },
        "condition_relations": {
            "ClipShape": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _EnabledScrollClipEffect<ClipShape> : SwiftUICore.ViewModifier, SwiftUICore.Animatable where ClipShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "_EnabledScrollClipEffect",
        "generics": [
            "ClipShape"
        ],
        "conformances": [
            "ViewModifier",
            "Animatable "
        ],
        "conditions": {
            "ClipShape": "Shape"
        },
        "condition_relations": {
            "ClipShape": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeIntersection<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeIntersection",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeUnion<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeUnion",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeSubtraction<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeSubtraction",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeSymmetricDifference<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeSymmetricDifference",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeLineIntersection<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeLineIntersection",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@frozen public struct _ShapeLineSubtraction<T, U> : SwiftUICore.Shape where T : SwiftUICore.Shape, U : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ShapeLineSubtraction",
        "generics": [
            "T",
            "U"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "T": "Shape",
            "U": "Shape"
        },
        "condition_relations": {
            "T": ":",
            "U": ":"
        }
    },
    {
        "struct": "@propertyWrapper public struct ScaledMetric<Value> : SwiftUICore.DynamicProperty where Value : Swift.BinaryFloatingPoint {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ScaledMetric",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "Value": "BinaryFloatingPoint"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@propertyWrapper public struct _ScaledValue : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)",
            "@available(*, deprecated, message: \"Use @ScaledMetric\")"
        ],
        "name": "_ScaledValue",
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "@dynamicMemberLookup @propertyWrapper public struct Bindable<Value> {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "Bindable",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _FrameLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_FrameLayout",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _FlexFrameLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_FlexFrameLayout",
        "conformances": []
    },
    {
        "struct": "public struct TextProxy {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TextProxy",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TextRendererViewModifier<Renderer> where Renderer : SwiftUICore.TextRenderer {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_TextRendererViewModifier",
        "generics": [
            "Renderer"
        ],
        "conformances": [],
        "conditions": {
            "Renderer": "TextRenderer"
        },
        "condition_relations": {
            "Renderer": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AnimationModifier<Value> : SwiftUICore.ViewModifier where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_AnimationModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _AnimationView<Content> : SwiftUICore.View where Content : Swift.Equatable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_AnimationView",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "public struct _GraphInputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_GraphInputs",
        "conformances": []
    },
    {
        "struct": "@frozen public struct Color : Swift.Hashable, Swift.CustomStringConvertible, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Color",
        "conformances": [
            "Hashable",
            "CustomStringConvertible",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BindingActionModifier<Value> : SwiftUICore.ViewModifier where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_BindingActionModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ValueActionModifier<Value> : SwiftUICore.ViewModifier where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ValueActionModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct AnimationState<Value> where Value : SwiftUICore.VectorArithmetic {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "AnimationState",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "VectorArithmetic"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _UnaryViewAdaptor<Content> : SwiftUICore.View where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_UnaryViewAdaptor",
        "generics": [
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct AnimatablePair<First, Second> : SwiftUICore.VectorArithmetic where First : SwiftUICore.VectorArithmetic, Second : SwiftUICore.VectorArithmetic {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AnimatablePair",
        "generics": [
            "First",
            "Second"
        ],
        "conformances": [
            "VectorArithmetic "
        ],
        "conditions": {
            "First": "VectorArithmetic",
            "Second": "VectorArithmetic"
        },
        "condition_relations": {
            "First": ":",
            "Second": ":"
        }
    },
    {
        "struct": "public struct _GestureInputs {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_GestureInputs",
        "conformances": []
    },
    {
        "struct": "public struct _GestureOutputs<Value> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_GestureOutputs",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "public struct _LayoutTraits : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_LayoutTraits",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EmptyView : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EmptyView",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct TimeDataSource<Value> {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)"
        ],
        "name": "TimeDataSource",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@frozen public struct ContainerRelativeShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "ContainerRelativeShape",
        "conformances": [
            "Shape "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ContainerShapeModifier<Shape> where Shape : SwiftUICore.InsettableShape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_ContainerShapeModifier",
        "generics": [
            "Shape"
        ],
        "conformances": [],
        "conditions": {
            "Shape": "InsettableShape"
        },
        "condition_relations": {
            "Shape": ":"
        }
    },
    {
        "struct": "public struct _ResolvedKeyframeTrackContent<Value> where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ResolvedKeyframeTrackContent",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct CubicKeyframe<Value> : SwiftUICore.KeyframeTrackContent where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "CubicKeyframe",
        "generics": [
            "Value"
        ],
        "conformances": [
            "KeyframeTrackContent "
        ],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct SpringKeyframe<Value> : SwiftUICore.KeyframeTrackContent where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "SpringKeyframe",
        "generics": [
            "Value"
        ],
        "conformances": [
            "KeyframeTrackContent "
        ],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct LinearKeyframe<Value> : SwiftUICore.KeyframeTrackContent where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "LinearKeyframe",
        "generics": [
            "Value"
        ],
        "conformances": [
            "KeyframeTrackContent "
        ],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct MoveKeyframe<Value> : SwiftUICore.KeyframeTrackContent where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "MoveKeyframe",
        "generics": [
            "Value"
        ],
        "conformances": [
            "KeyframeTrackContent "
        ],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct PhaseAnimator<Phase, Content> : SwiftUICore.View where Phase : Swift.Equatable, Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "PhaseAnimator",
        "generics": [
            "Phase",
            "Content"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Phase": "Equatable",
            "Content": "View"
        },
        "condition_relations": {
            "Phase": ":",
            "Content": ":"
        }
    },
    {
        "struct": "public struct _RendererConfiguration {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_RendererConfiguration",
        "conformances": []
    },
    {
        "struct": "public struct KeyframeTimeline<Value> {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "KeyframeTimeline",
        "generics": [
            "Value"
        ],
        "conformances": []
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct TapGesture : SwiftUICore.Gesture {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 16.0, watchOS 6.0, *)"
        ],
        "name": "TapGesture",
        "conformances": [
            "Gesture "
        ]
    },
    {
        "struct": "@_functionBuilder public struct KeyframeTrackContentBuilder<Value> where Value : SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "KeyframeTrackContentBuilder",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "Animatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @propertyWrapper @preconcurrency @_Concurrency.MainActor public struct StateObject<ObjectType> : SwiftUICore.DynamicProperty where ObjectType : Combine.ObservableObject {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "StateObject",
        "generics": [
            "ObjectType"
        ],
        "conformances": [
            "DynamicProperty "
        ],
        "conditions": {
            "ObjectType": "ObservableObject"
        },
        "condition_relations": {
            "ObjectType": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct AnyView : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AnyView",
        "conformances": [
            "View "
        ]
    },
    {
        "struct": "public struct _EventDebugTriggers : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_EventDebugTriggers",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "@frozen public struct ColorMatrix : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "ColorMatrix",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct _ColorMatrix : Swift.Equatable, Swift.Codable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_ColorMatrix",
        "conformances": [
            "Equatable",
            "Codable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackdropEffect<Backdrop> where Backdrop : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_BackdropEffect",
        "generics": [
            "Backdrop"
        ],
        "conformances": [],
        "conditions": {
            "Backdrop": "View"
        },
        "condition_relations": {
            "Backdrop": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackdropEffectPlaceholder {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_BackdropEffectPlaceholder",
        "conformances": []
    },
    {
        "struct": "@frozen public struct EmptyAnimatableData : SwiftUICore.VectorArithmetic {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EmptyAnimatableData",
        "conformances": [
            "VectorArithmetic "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct MeshGradient : SwiftUICore.ShapeStyle, Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 18.0, macOS 15.0, watchOS 11.0, tvOS 18.0, visionOS 2.0, *)"
        ],
        "name": "MeshGradient",
        "conformances": [
            "ShapeStyle",
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct PinnedScrollableViews : Swift.OptionSet, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "PinnedScrollableViews",
        "conformances": [
            "OptionSet",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct _SizedShape<S> : SwiftUICore.Shape where S : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_SizedShape",
        "generics": [
            "S"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "S": "Shape"
        },
        "condition_relations": {
            "S": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct EmptyModifier : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "EmptyModifier",
        "conformances": [
            "ViewModifier "
        ]
    },
    {
        "struct": "@frozen public struct ModifiedContent<Content, Modifier> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ModifiedContent",
        "generics": [
            "Content",
            "Modifier"
        ],
        "conformances": []
    },
    {
        "struct": "public struct SymbolVariants : Swift.Hashable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "SymbolVariants",
        "conformances": [
            "Hashable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackgroundModifier<Background> : SwiftUICore.ViewModifier where Background : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_BackgroundModifier",
        "generics": [
            "Background"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Background": "View"
        },
        "condition_relations": {
            "Background": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackgroundStyleModifier<Style> : SwiftUICore.ViewModifier where Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_BackgroundStyleModifier",
        "generics": [
            "Style"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Style": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _BackgroundShapeModifier<Style, Bounds> : SwiftUICore.ViewModifier where Style : SwiftUICore.ShapeStyle, Bounds : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_BackgroundShapeModifier",
        "generics": [
            "Style",
            "Bounds"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Style": "ShapeStyle",
            "Bounds": "Shape"
        },
        "condition_relations": {
            "Style": ":",
            "Bounds": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _InsettableBackgroundShapeModifier<Style, Bounds> : SwiftUICore.ViewModifier where Style : SwiftUICore.ShapeStyle, Bounds : SwiftUICore.InsettableShape {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_InsettableBackgroundShapeModifier",
        "generics": [
            "Style",
            "Bounds"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Style": "ShapeStyle",
            "Bounds": "InsettableShape"
        },
        "condition_relations": {
            "Style": ":",
            "Bounds": ":"
        }
    },
    {
        "struct": "@frozen @propertyWrapper public struct State<Value> : SwiftUICore.DynamicProperty {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "State",
        "generics": [
            "Value"
        ],
        "conformances": [
            "DynamicProperty "
        ]
    },
    {
        "struct": "public struct AnimationContext<Value> where Value : SwiftUICore.VectorArithmetic {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "AnimationContext",
        "generics": [
            "Value"
        ],
        "conformances": [],
        "conditions": {
            "Value": "VectorArithmetic"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "public struct _TestApp {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TestApp",
        "conformances": []
    },
    {
        "struct": "@frozen public struct AnyTransition {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "AnyTransition",
        "conformances": []
    },
    {
        "struct": "public struct ContentTransition : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "ContentTransition",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct _Transition_ContentTransition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_Transition_ContentTransition",
        "conformances": []
    },
    {
        "struct": "public struct TransitionProperties : Swift.Sendable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "TransitionProperties",
        "conformances": [
            "Sendable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct IdentityTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "IdentityTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "public struct EmptyVisualEffect : SwiftUICore.VisualEffect {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "EmptyVisualEffect",
        "conformances": [
            "VisualEffect "
        ]
    },
    {
        "struct": "public struct NamedCoordinateSpace : SwiftUICore.CoordinateSpaceProtocol, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "NamedCoordinateSpace",
        "conformances": [
            "CoordinateSpaceProtocol",
            "Equatable "
        ]
    },
    {
        "struct": "public struct LocalCoordinateSpace : SwiftUICore.CoordinateSpaceProtocol {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "LocalCoordinateSpace",
        "conformances": [
            "CoordinateSpaceProtocol "
        ]
    },
    {
        "struct": "public struct GlobalCoordinateSpace : SwiftUICore.CoordinateSpaceProtocol {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "GlobalCoordinateSpace",
        "conformances": [
            "CoordinateSpaceProtocol "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _SaturationEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_SaturationEffect",
        "conformances": [
            "Equatable "
        ]
    },
    {
        "struct": "@frozen public struct Angle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Angle",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _SafeAreaIgnoringLayout {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_SafeAreaIgnoringLayout",
        "conformances": []
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _SafeAreaRegionsIgnoringLayout {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "_SafeAreaRegionsIgnoringLayout",
        "conformances": []
    },
    {
        "struct": "@frozen public struct _ConditionalContent<TrueContent, FalseContent> {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ConditionalContent",
        "generics": [
            "TrueContent",
            "FalseContent"
        ],
        "conformances": []
    },
    {
        "struct": "public struct ForEach<Data, ID, Content> where Data : Swift.RandomAccessCollection, ID : Swift.Hashable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ForEach",
        "generics": [
            "Data",
            "ID",
            "Content"
        ],
        "conformances": [],
        "conditions": {
            "Data": "RandomAccessCollection",
            "ID": "Hashable"
        },
        "condition_relations": {
            "Data": ":",
            "ID": ":"
        }
    },
    {
        "struct": "@frozen public struct OffsetShape<Content> : SwiftUICore.Shape where Content : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "OffsetShape",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "Content": "Shape"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct ScaledShape<Content> : SwiftUICore.Shape where Content : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "ScaledShape",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "Content": "Shape"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct RotatedShape<Content> : SwiftUICore.Shape where Content : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "RotatedShape",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "Content": "Shape"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct TransformedShape<Content> : SwiftUICore.Shape where Content : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "TransformedShape",
        "generics": [
            "Content"
        ],
        "conformances": [
            "Shape "
        ],
        "conditions": {
            "Content": "Shape"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ColorMultiplyEffect : SwiftUICore.EnvironmentalModifier, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ColorMultiplyEffect",
        "conformances": [
            "EnvironmentalModifier",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct Canvas<Symbols> where Symbols : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "Canvas",
        "generics": [
            "Symbols"
        ],
        "conformances": [],
        "conditions": {
            "Symbols": "View"
        },
        "condition_relations": {
            "Symbols": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ClipEffect<ClipShape> where ClipShape : SwiftUICore.Shape {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ClipEffect",
        "generics": [
            "ClipShape"
        ],
        "conformances": [],
        "conditions": {
            "ClipShape": "Shape"
        },
        "condition_relations": {
            "ClipShape": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _TransactionModifier : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_TransactionModifier",
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ValueTransactionModifier<Value> : SwiftUICore.ViewModifier, SwiftUICore._GraphInputsModifier where Value : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "_ValueTransactionModifier",
        "generics": [
            "Value"
        ],
        "conformances": [
            "ViewModifier",
            "_GraphInputsModifier "
        ],
        "conditions": {
            "Value": "Equatable"
        },
        "condition_relations": {
            "Value": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _PushPopTransactionModifier<Content> : SwiftUICore.ViewModifier where Content : SwiftUICore.ViewModifier {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_PushPopTransactionModifier",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Content": "ViewModifier"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _ShapeView<Content, Style> : SwiftUICore.View where Content : SwiftUICore.Shape, Style : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ShapeView",
        "generics": [
            "Content",
            "Style"
        ],
        "conformances": [
            "View "
        ],
        "conditions": {
            "Content": "Shape",
            "Style": "ShapeStyle"
        },
        "condition_relations": {
            "Content": ":",
            "Style": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct FillShapeView<Content, Style, Background> : SwiftUICore.ShapeView where Content : SwiftUICore.Shape, Style : SwiftUICore.ShapeStyle, Background : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "FillShapeView",
        "generics": [
            "Content",
            "Style",
            "Background"
        ],
        "conformances": [
            "ShapeView "
        ],
        "conditions": {
            "Content": "Shape",
            "Style": "ShapeStyle",
            "Background": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Style": ":",
            "Background": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct StrokeShapeView<Content, Style, Background> : SwiftUICore.ShapeView where Content : SwiftUICore.Shape, Style : SwiftUICore.ShapeStyle, Background : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "StrokeShapeView",
        "generics": [
            "Content",
            "Style",
            "Background"
        ],
        "conformances": [
            "ShapeView "
        ],
        "conditions": {
            "Content": "Shape",
            "Style": "ShapeStyle",
            "Background": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Style": ":",
            "Background": ":"
        }
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct StrokeBorderShapeView<Content, Style, Background> : SwiftUICore.ShapeView where Content : SwiftUICore.InsettableShape, Style : SwiftUICore.ShapeStyle, Background : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "StrokeBorderShapeView",
        "generics": [
            "Content",
            "Style",
            "Background"
        ],
        "conformances": [
            "ShapeView "
        ],
        "conditions": {
            "Content": "InsettableShape",
            "Style": "ShapeStyle",
            "Background": "View"
        },
        "condition_relations": {
            "Content": ":",
            "Style": ":",
            "Background": ":"
        }
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct BlurReplaceTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "BlurReplaceTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "@frozen public struct Text : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Text",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct SafeAreaRegions : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)"
        ],
        "name": "SafeAreaRegions",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "public struct PreferredColorSchemeKey : SwiftUICore.PreferenceKey {",
        "availabilities": [
            "@available(iOS 13.0, macOS 11.0, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "PreferredColorSchemeKey",
        "conformances": [
            "PreferenceKey "
        ]
    },
    {
        "struct": "@frozen public struct Image : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Image",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "@frozen public struct GestureMask : Swift.OptionSet {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "GestureMask",
        "conformances": [
            "OptionSet "
        ]
    },
    {
        "struct": "@frozen public struct _ScaleEffect : SwiftUICore.GeometryEffect, Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_ScaleEffect",
        "conformances": [
            "GeometryEffect",
            "Equatable "
        ]
    },
    {
        "struct": "@_Concurrency.MainActor @preconcurrency public struct ScaleTransition : SwiftUICore.Transition {",
        "availabilities": [
            "@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)"
        ],
        "name": "ScaleTransition",
        "conformances": [
            "Transition "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _InsetViewModifier<Content> : SwiftUICore.ViewModifier where Content : SwiftUICore.View {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "_InsetViewModifier",
        "generics": [
            "Content"
        ],
        "conformances": [
            "ViewModifier "
        ],
        "conditions": {
            "Content": "View"
        },
        "condition_relations": {
            "Content": ":"
        }
    },
    {
        "struct": "@frozen public struct RectangleCornerRadii : Swift.Equatable, SwiftUICore.Animatable {",
        "availabilities": [
            "@available(iOS 16.0, macOS 13.0, tvOS 16.0, watchOS 9.0, *)"
        ],
        "name": "RectangleCornerRadii",
        "conformances": [
            "Equatable",
            "Animatable "
        ]
    },
    {
        "struct": "@frozen public struct Animation : Swift.Equatable, Swift.Sendable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "Animation",
        "conformances": [
            "Equatable",
            "Sendable "
        ]
    },
    {
        "struct": "public struct TintShapeStyle : SwiftUICore.ShapeStyle {",
        "availabilities": [
            "@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, *)"
        ],
        "name": "TintShapeStyle",
        "conformances": [
            "ShapeStyle "
        ]
    },
    {
        "struct": "@frozen @_Concurrency.MainActor @preconcurrency public struct _HueRotationEffect : Swift.Equatable {",
        "availabilities": [
            "@available(iOS 13.0, macOS 10.15, tvOS 13.0, watchOS 6.0, *)"
        ],
        "name": "_HueRotationEffect",
        "conformances": [
            "Equatable "
        ]
    }
]